{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_codemirror = _resolveComponent(\"codemirror\");\n  return _openBlock(), _createBlock(_component_codemirror, {\n    ref: \"cmEditor\",\n    value: $data.code,\n    options: $data.cmOptions,\n    onReady: $options.onCmReady,\n    onFocus: $options.onCmFocus,\n    onInput: $options.onCmCodeChange\n  }, null, 8 /* PROPS */, [\"value\", \"options\", \"onReady\", \"onFocus\", \"onInput\"]);\n}","map":{"version":3,"names":["_createBlock","_component_codemirror","ref","value","$data","code","options","cmOptions","onReady","$options","onCmReady","onFocus","onCmFocus","onInput","onCmCodeChange"],"sources":["D:\\Nodejs\\oj-frontend\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n    <codemirror\n        ref=\"cmEditor\"\n        :value=\"code\"\n        :options=\"cmOptions\"\n        @ready=\"onCmReady\"\n        @focus=\"onCmFocus\"\n        @input=\"onCmCodeChange\"\n    />\n</template>\n<script>\nimport { codemirror } from \"vue-codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport \"codemirror/theme/base16-dark.css\";\nexport default {\n    name: \"codemirrorDemo\",\n    components: {\n        codemirror,\n    },\n    data() {\n        return {\n            code: \"const a = 10\",\n            cmOptions: {\n                tabSize: 4,\n                mode: \"text/javascript\",\n                theme: \"base16-dark\",\n                lineNumbers: true,\n                line: true,\n                // more CodeMirror options...\n            },\n        };\n    },\n    methods: {\n        onCmReady(cm) {\n            console.log(\"the editor is readied!\", cm);\n        },\n        onCmFocus(cm) {\n            console.log(\"the editor is focused!\", cm);\n        },\n        onCmCodeChange(newCode) {\n            console.log(\"this is new code\", newCode);\n            this.code = newCode;\n        },\n    },\n    computed: {\n        codemirror() {\n            return this.$refs.cmEditor.codemirror;\n        },\n    },\n    mounted() {\n        console.log(\"the current CodeMirror instance object:\", this.codemirror);\n        // you can use this.codemirror to do something...\n    },\n};\n</script>\n"],"mappings":";;;uBACIA,YAAA,CAOEC,qBAAA;IANEC,GAAG,EAAC,UAAU;IACbC,KAAK,EAAEC,KAAA,CAAAC,IAAI;IACXC,OAAO,EAAEF,KAAA,CAAAG,SAAS;IAClBC,OAAK,EAAEC,QAAA,CAAAC,SAAS;IAChBC,OAAK,EAAEF,QAAA,CAAAG,SAAS;IAChBC,OAAK,EAAEJ,QAAA,CAAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}