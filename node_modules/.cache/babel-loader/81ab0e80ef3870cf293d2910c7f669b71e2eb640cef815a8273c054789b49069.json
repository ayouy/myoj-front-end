{"ast":null,"code":"import { computed, ref } from \"vue\";\nimport { Message } from \"@arco-design/web-vue\";\nimport { UserControllerService } from \"../../../generated\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'ProfileView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const user = computed(() => store.state.user.loginUser);\n    const userRef = ref({\n      ...store.state.user.loginUser\n    });\n\n    // 头像上传前检查\n    const beforeUpload = file => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        Message.error(\"请上传图片格式！\");\n        return false;\n      }\n      return true;\n    };\n\n    // 头像上传成功回调\n    const handleAvatarSuccess = response => {\n      console.log(\"服务器上传成功\" + response.response.data);\n      if (response.response.code === 0) {\n        const newAvatar = response.response.data;\n        userRef.value.userAvatar = newAvatar;\n        store.commit(\"user/updateUser\", {\n          ...user.value,\n          userAvatar: newAvatar\n        });\n        Message.success(\"头像上传成功！\");\n      } else {\n        Message.error(\"头像上传失败：\" + response.response.message);\n      }\n    };\n\n    // 更新用户信息\n    const updateProfile = async () => {\n      try {\n        await UserControllerService.updateMyUserUsingPost(userRef.value);\n        Message.success(\"修改成功！\");\n        store.commit(\"user/updateUser\", userRef.value);\n      } catch (error) {\n        Message.error(\"修改失败！\");\n      }\n    };\n    const __returned__ = {\n      store,\n      user,\n      userRef,\n      beforeUpload,\n      handleAvatarSuccess,\n      updateProfile,\n      computed,\n      ref,\n      get Message() {\n        return Message;\n      },\n      get UserControllerService() {\n        return UserControllerService;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","Message","UserControllerService","useStore","store","user","state","loginUser","userRef","beforeUpload","file","isImage","type","startsWith","error","handleAvatarSuccess","response","console","log","data","code","newAvatar","value","userAvatar","commit","success","message","updateProfile","updateMyUserUsingPost"],"sources":["D:/Nodejs/oj-frontend/src/views/UserConsole/ProfileView.vue"],"sourcesContent":["<template>\r\n    <a-card title=\"用户信息\" style=\"width: 400px\">\r\n        <div class=\"profile-container\">\r\n            <!-- 头像上传 -->\r\n            <a-upload\r\n                :show-file-list=\"false\"\r\n                :before-upload=\"beforeUpload\"\r\n                action=\"http://localhost:9527/api/cos/upload/avatar\"\r\n                @success=\"handleAvatarSuccess\"\r\n            >\r\n                <a-avatar\r\n                    :size=\"100\"\r\n                    :src=\"user.userAvatar\"\r\n                    class=\"avatar-upload\"\r\n                />\r\n            </a-upload>\r\n\r\n            <a-descriptions bordered :column=\"1\">\r\n                <a-descriptions-item label=\"用户名\">\r\n                    {{ user.userName }}\r\n                </a-descriptions-item>\r\n            </a-descriptions>\r\n\r\n            <a-input v-model=\"user.userName\" placeholder=\"请输入昵称\" />\r\n            <a-textarea v-model=\"user.userProfile\" placeholder=\"请输入简介\" />\r\n\r\n            <a-button\r\n                type=\"primary\"\r\n                @click=\"updateProfile\"\r\n                style=\"margin-top: 10px\"\r\n            >\r\n                保存修改\r\n            </a-button>\r\n        </div>\r\n    </a-card>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref } from \"vue\";\r\nimport { Message } from \"@arco-design/web-vue\";\r\nimport { UserControllerService } from \"../../../generated\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\nconst user = computed(() => store.state.user.loginUser);\r\nconst userRef = ref({ ...store.state.user.loginUser });\r\n\r\n// 头像上传前检查\r\nconst beforeUpload = (file) => {\r\n    const isImage = file.type.startsWith(\"image/\");\r\n    if (!isImage) {\r\n        Message.error(\"请上传图片格式！\");\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n// 头像上传成功回调\r\nconst handleAvatarSuccess = (response) => {\r\n    console.log(\"服务器上传成功\"+response.response.data);\r\n    if (response.response.code === 0) {\r\n        const newAvatar = response.response.data; \r\n        userRef.value.userAvatar = newAvatar;\r\n        store.commit(\"user/updateUser\", { ...user.value, userAvatar: newAvatar });\r\n        Message.success(\"头像上传成功！\");\r\n    } else {\r\n        Message.error(\"头像上传失败：\" + response.response.message);\r\n    }\r\n};\r\n\r\n// 更新用户信息\r\nconst updateProfile = async () => {\r\n    try {\r\n        await UserControllerService.updateMyUserUsingPost(userRef.value);\r\n        Message.success(\"修改成功！\");\r\n        store.commit(\"user/updateUser\", userRef.value);\r\n    } catch (error) {\r\n        Message.error(\"修改失败！\");\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n\r\n.avatar-upload {\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    transition: all 0.3s;\r\n}\r\n\r\n.avatar-upload:hover {\r\n    opacity: 0.8;\r\n}\r\n</style>\r\n"],"mappings":"AAsCA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,qBAAqB,QAAQ,oBAAoB;AAC1D,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,IAAI,GAAGN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC;IACvD,MAAMC,OAAO,GAAGR,GAAG,CAAC;MAAE,GAAGI,KAAK,CAACE,KAAK,CAACD,IAAI,CAACE;IAAU,CAAC,CAAC;;IAEtD;IACA,MAAME,YAAY,GAAIC,IAAI,IAAK;MAC3B,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC;MAC9C,IAAI,CAACF,OAAO,EAAE;QACVV,OAAO,CAACa,KAAK,CAAC,UAAU,CAAC;QACzB,OAAO,KAAK;MAChB;MACA,OAAO,IAAI;IACf,CAAC;;IAED;IACA,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;MACtCC,OAAO,CAACC,GAAG,CAAC,SAAS,GAACF,QAAQ,CAACA,QAAQ,CAACG,IAAI,CAAC;MAC7C,IAAIH,QAAQ,CAACA,QAAQ,CAACI,IAAI,KAAK,CAAC,EAAE;QAC9B,MAAMC,SAAS,GAAGL,QAAQ,CAACA,QAAQ,CAACG,IAAI;QACxCX,OAAO,CAACc,KAAK,CAACC,UAAU,GAAGF,SAAS;QACpCjB,KAAK,CAACoB,MAAM,CAAC,iBAAiB,EAAE;UAAE,GAAGnB,IAAI,CAACiB,KAAK;UAAEC,UAAU,EAAEF;QAAU,CAAC,CAAC;QACzEpB,OAAO,CAACwB,OAAO,CAAC,SAAS,CAAC;MAC9B,CAAC,MAAM;QACHxB,OAAO,CAACa,KAAK,CAAC,SAAS,GAAGE,QAAQ,CAACA,QAAQ,CAACU,OAAO,CAAC;MACxD;IACJ,CAAC;;IAED;IACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMzB,qBAAqB,CAAC0B,qBAAqB,CAACpB,OAAO,CAACc,KAAK,CAAC;QAChErB,OAAO,CAACwB,OAAO,CAAC,OAAO,CAAC;QACxBrB,KAAK,CAACoB,MAAM,CAAC,iBAAiB,EAAEhB,OAAO,CAACc,KAAK,CAAC;MAClD,CAAC,CAAC,OAAOR,KAAK,EAAE;QACZb,OAAO,CAACa,KAAK,CAAC,OAAO,CAAC;MAC1B;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}