{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React, { useCallback, useContext, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport cs from '../_util/classNames';\nimport { ArrowUp, ArrowDown, Enter, Esc, Tab } from '../_util/keycode';\nimport Trigger from '../Trigger';\nimport OptGroup from './opt-group';\nimport Option from './option';\nimport ResizeObserver from '../_util/resizeObserver';\nimport { isArray, isFunction, isObject } from '../_util/is';\nimport getHotkeyHandler from '../_util/getHotkeyHandler';\nimport warning from '../_util/warning';\nimport SelectView from '../_class/select-view';\nimport VirtualList from '../_class/VirtualList';\nimport { preventDefaultEvent, isEmptyValue, getValidValue, isSelectOption, isSelectOptGroup, flatChildren } from './utils';\nimport { ConfigContext } from '../ConfigProvider';\nimport useMergeValue from '../_util/hooks/useMergeValue';\nimport omit from '../_util/omit';\nimport useMergeProps from '../_util/hooks/useMergeProps';\nimport useId from '../_util/hooks/useId';\n// 用户创建中的option的origin标识\nvar USER_CREATING_OPTION_ORIGIN = 'userCreatingOption';\nvar defaultProps = {\n  trigger: 'click',\n  bordered: true,\n  filterOption: true,\n  unmountOnExit: true,\n  defaultActiveFirstOption: true\n};\nvar triggerPopupAlign = {\n  bottom: 4\n};\nfunction Select(baseProps, ref) {\n  var _a = useContext(ConfigContext),\n    getPrefixCls = _a.getPrefixCls,\n    renderEmpty = _a.renderEmpty,\n    componentConfig = _a.componentConfig,\n    rtl = _a.rtl;\n  var props = useMergeProps(baseProps, defaultProps, componentConfig === null || componentConfig === void 0 ? void 0 : componentConfig.Select);\n  var children = props.children,\n    renderFormat = props.renderFormat,\n    defaultActiveFirstOption = props.defaultActiveFirstOption,\n    disabled = props.disabled,\n    unmountOnExit = props.unmountOnExit,\n    notFoundContent = props.notFoundContent,\n    showSearch = props.showSearch,\n    tokenSeparators = props.tokenSeparators,\n    options = props.options,\n    filterOption = props.filterOption,\n    labelInValue = props.labelInValue,\n    getPopupContainer = props.getPopupContainer,\n    trigger = props.trigger,\n    triggerElement = props.triggerElement,\n    triggerProps = props.triggerProps,\n    dropdownRender = props.dropdownRender,\n    dropdownMenuStyle = props.dropdownMenuStyle,\n    dropdownMenuClassName = props.dropdownMenuClassName,\n    virtualListProps = props.virtualListProps,\n    // events\n    onChange = props.onChange,\n    onSelect = props.onSelect,\n    onDeselect = props.onDeselect,\n    onClear = props.onClear,\n    onSearch = props.onSearch,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onPopupScroll = props.onPopupScroll,\n    onVisibleChange = props.onVisibleChange,\n    onInputValueChange = props.onInputValueChange,\n    onPaste = props.onPaste,\n    onKeyDown = props.onKeyDown;\n  // TODO 兼容逻辑，3.0 移除 tags 模式\n  var mode = props.mode,\n    allowCreate = props.allowCreate;\n  if (mode === 'tags') {\n    mode = 'multiple';\n    allowCreate = true;\n    warning(true, \"[Arco Select] The 'tags' mode will be removed in the next major version, please use {mode: \\\"multiple\\\", allowCreate: true} instead.\");\n  }\n  var prefixCls = getPrefixCls('select');\n  var isMultipleMode = mode === 'multiple';\n  // TODO: 统一 useMergeValue 函数的表现\n  var _b = __read(useState(getValidValue(props.defaultValue, isMultipleMode, labelInValue)), 2),\n    stateValue = _b[0],\n    setValue = _b[1];\n  var value = 'value' in props ? getValidValue(props.value, isMultipleMode, labelInValue) : stateValue;\n  var _c = __read(useMergeValue('', {\n      value: 'inputValue' in props ? props.inputValue || '' : undefined\n    }), 3),\n    inputValue = _c[0],\n    setInputValue = _c[1],\n    stateInputValue = _c[2];\n  var _d = __read(useMergeValue(false, {\n      defaultValue: props.defaultPopupVisible,\n      value: 'popupVisible' in props ? props.popupVisible : triggerProps && 'popupVisible' in triggerProps ? triggerProps.popupVisible : undefined\n    }), 2),\n    popupVisible = _d[0],\n    setPopupVisible = _d[1];\n  // allowCreate 时，用户正在创建的选项值\n  var _e = __read(useState(null), 2),\n    userCreatingOption = _e[0],\n    setUserCreatingOption = _e[1];\n  // allowCreate 时，由用户输入而扩展到选项中的值\n  var _f = __read(useState([]), 2),\n    userCreatedOptions = _f[0],\n    setUserCreatedOptions = _f[1];\n  // 具有选中态或者 hover 态的 option 的 value\n  var _g = __read(useState(isArray(value) ? value[0] : value), 2),\n    valueActive = _g[0],\n    setValueActive = _g[1];\n  // 缓存较为耗时的 flatChildren 的结果\n  var _h = useMemo(function () {\n      return flatChildren({\n        children: children,\n        options: options,\n        filterOption: filterOption\n      }, {\n        prefixCls: prefixCls,\n        inputValue: inputValue,\n        userCreatedOptions: userCreatedOptions,\n        userCreatingOption: userCreatingOption\n      });\n    }, [children, options, filterOption, inputValue, userCreatingOption, userCreatedOptions]),\n    childrenList = _h.childrenList,\n    optionInfoMap = _h.optionInfoMap,\n    optionValueList = _h.optionValueList,\n    optionIndexListForArrowKey = _h.optionIndexListForArrowKey,\n    hasOptGroup = _h.hasOptGroup,\n    hasComplexLabelInOptions = _h.hasComplexLabelInOptions;\n  // ref\n  var refWrapper = useRef(null);\n  var refTrigger = useRef(null);\n  var refSelectView = useRef(null);\n  // 用来保存 value 和选中项的映射\n  var refValueMap = useRef([]);\n  // 用 none 表示目前处于键盘操作中，忽略鼠标的 onMouseEnter 和 onMouseLeave 事件\n  var refKeyboardArrowDirection = useRef(null);\n  // 触发 onInputValueChange 回调的值\n  var refOnInputChangeCallbackValue = useRef(inputValue);\n  // 触发 onInputValueChange 回调的原因\n  var refOnInputChangeCallbackReason = useRef(null);\n  // 上次成功触发自动分词的时间\n  var refTSLastSeparateTriggered = useRef(0);\n  // Whether in the hidden animation of drop-down\n  var refPopupExiting = useRef(false);\n  // Unique ID of this select instance\n  var instancePopupID = useId(prefixCls + \"-popup-\");\n  var isNoOptionSelected = isEmptyValue(value, isMultipleMode);\n  var valueActiveDefault = useMemo(function () {\n    var _a, _b;\n    if (defaultActiveFirstOption) {\n      var firstValue = isArray(value) ? value[0] : value;\n      // only valid option will render in option list\n      // if it's not rendered (e.g. filtered by user-search), ignore it\n      var isFirstValueOptionSelectable = !isNoOptionSelected && ((_a = optionInfoMap.get(firstValue)) === null || _a === void 0 ? void 0 : _a._valid);\n      // 是否第一个 option 是创建中选项\n      var isFirstCreatingOption = ((_b = optionInfoMap === null || optionInfoMap === void 0 ? void 0 : optionInfoMap.get(optionValueList[0])) === null || _b === void 0 ? void 0 : _b._origin) === USER_CREATING_OPTION_ORIGIN;\n      return isFirstValueOptionSelectable && !isFirstCreatingOption ? firstValue : optionValueList[optionIndexListForArrowKey[0]];\n    }\n    return undefined;\n  }, [value, optionInfoMap, optionValueList, optionIndexListForArrowKey, defaultActiveFirstOption, isNoOptionSelected]);\n  var scrollIntoView = useCallback(function (optionValue, options) {\n    var _a;\n    var activeOption = optionInfoMap.get(optionValue);\n    if (refWrapper.current && ((_a = activeOption === null || activeOption === void 0 ? void 0 : activeOption.child) === null || _a === void 0 ? void 0 : _a.props)) {\n      refWrapper.current.scrollTo({\n        key: activeOption.child.props._key,\n        options: options\n      });\n    }\n  }, [optionInfoMap]);\n  var userCreatedOptionFormatter = useCallback(function (inputValue, creating) {\n    if (creating === void 0) {\n      creating = false;\n    }\n    return isObject(allowCreate) && typeof (allowCreate === null || allowCreate === void 0 ? void 0 : allowCreate.formatter) === 'function' ? allowCreate.formatter(inputValue, creating) : inputValue;\n  }, [allowCreate]);\n  // Try to update inputValue and trigger onInputValueChange callback\n  var tryUpdateInputValue = function (value, reason) {\n    if (value !== refOnInputChangeCallbackValue.current || reason !== refOnInputChangeCallbackReason.current) {\n      setInputValue(value);\n      refOnInputChangeCallbackValue.current = value;\n      refOnInputChangeCallbackReason.current = reason;\n      onInputValueChange && onInputValueChange(value, reason);\n    }\n  };\n  // 尝试更新 popupVisible，触发 onVisibleChange\n  var tryUpdatePopupVisible = function (value) {\n    if (popupVisible !== value) {\n      setPopupVisible(value);\n      onVisibleChange && onVisibleChange(value);\n      triggerProps && triggerProps.onVisibleChange && triggerProps.onVisibleChange(value);\n    }\n  };\n  // 处理模式切换时 value 格式的校正\n  useEffect(function () {\n    if (isMultipleMode) {\n      if (!Array.isArray(value)) {\n        setValue(value === undefined ? [] : [value]);\n      }\n    } else if (Array.isArray(value)) {\n      setValue(value.length === 0 ? undefined : value[0]);\n    }\n  }, [isMultipleMode, value]);\n  // 选项下拉框显示/隐藏时的一些自动行为\n  useEffect(function () {\n    if (popupVisible) {\n      // 重新设置 hover 态的 Option\n      setValueActive(valueActiveDefault);\n      // 在弹出框动画结束之后再执行scrollIntoView，否则会有不必要的滚动产生\n      var firstValue_1 = isArray(value) ? value[0] : value;\n      if (!isNoOptionSelected && optionInfoMap.has(firstValue_1)) {\n        setTimeout(function () {\n          return scrollIntoView(firstValue_1);\n        });\n      }\n    }\n  }, [popupVisible]);\n  // 处理键盘选择Option时的列表滚动\n  useEffect(function () {\n    if (refKeyboardArrowDirection.current === 'up' || refKeyboardArrowDirection.current === 'down') {\n      scrollIntoView(valueActive);\n      refKeyboardArrowDirection.current = 'none';\n    }\n  }, [valueActive]);\n  // 选项列表改变后，将 active 选项重置\n  useEffect(function () {\n    setValueActive(valueActiveDefault);\n  }, [JSON.stringify(childrenList.map(function (child) {\n    var _a;\n    return (_a = child === null || child === void 0 ? void 0 : child.props) === null || _a === void 0 ? void 0 : _a.value;\n  }))]);\n  // 更新 refValueMap，避免数组规模无节制扩大\n  useEffect(function () {\n    refValueMap.current = refValueMap.current.filter(function (x) {\n      return isMultipleMode ? isArray(value) && value.indexOf(x.value) > -1 : x.value === value;\n    });\n  }, [value, isMultipleMode]);\n  // allowCreate 时，value 改变时更新下拉框选项\n  useEffect(function () {\n    if (allowCreate) {\n      var nextUserCreatedOptions = void 0;\n      if (isEmptyValue(value, isMultipleMode)) {\n        nextUserCreatedOptions = [];\n      } else {\n        // 将单选和多选的情况统一处理\n        var currentValueList_1 = Array.isArray(value) ? value : [value];\n        // 将无对应下拉框选项的 value 当作用户创建的选项\n        var newUserCreatedOptions = currentValueList_1.filter(function (v) {\n          var _a;\n          var option = optionInfoMap.get(v) || ((_a = refValueMap.current.find(function (item) {\n            return item.value === v;\n          })) === null || _a === void 0 ? void 0 : _a.option);\n          return !option || option._origin === USER_CREATING_OPTION_ORIGIN;\n        }).map(function (op) {\n          return userCreatedOptionFormatter(op);\n        });\n        // 将 value 中不存在的 Option 移除\n        var validUserCreatedOptions = userCreatedOptions.filter(function (op) {\n          var opValue = isObject(op) ? op.value : op;\n          return currentValueList_1.indexOf(opValue) !== -1;\n        });\n        nextUserCreatedOptions = validUserCreatedOptions.concat(newUserCreatedOptions);\n      }\n      var getOptionsValueString = function (options) {\n        return options.map(function (option) {\n          return isObject(option) ? option.value : option;\n        }).toString();\n      };\n      // only update state when user-created options changed\n      if (getOptionsValueString(nextUserCreatedOptions) !== getOptionsValueString(userCreatedOptions)) {\n        setUserCreatedOptions(nextUserCreatedOptions);\n      }\n    }\n  }, [value, allowCreate, isMultipleMode, userCreatedOptionFormatter]);\n  // allowCreate 时，根据输入内容动态修改下拉框选项\n  useEffect(function () {\n    if (allowCreate) {\n      // 避免正在输入的内容覆盖已有的选项\n      setUserCreatingOption(inputValue && !optionInfoMap.has(inputValue) ? userCreatedOptionFormatter(inputValue, true) : null);\n    }\n  }, [inputValue, userCreatedOptionFormatter]);\n  // 在 inputValue 变化时，适时触发 onSearch\n  useEffect(function () {\n    var reason = refOnInputChangeCallbackReason.current;\n    if (stateInputValue === inputValue && (reason === 'manual' || reason === 'optionListHide')) {\n      onSearch && onSearch(inputValue, reason);\n    }\n  }, [inputValue]);\n  var getOptionInfoByValue = useCallback(function (value) {\n    var option = optionInfoMap.get(value);\n    if (option) {\n      var index = refValueMap.current.findIndex(function (item) {\n        return item.value === value;\n      });\n      if (index > -1) {\n        refValueMap.current.splice(index, 1, {\n          value: value,\n          option: option\n        });\n      } else {\n        refValueMap.current.push({\n          value: value,\n          option: option\n        });\n      }\n      return option;\n    }\n    var item = refValueMap.current.find(function (x) {\n      return x.value === value;\n    });\n    return item && item.option;\n  }, [optionInfoMap]);\n  // 使用方向键选择时，获取下一个 active option 的值\n  var getValueActive = function (direction) {\n    if (!optionIndexListForArrowKey.length) {\n      return undefined;\n    }\n    if (valueActive === undefined || !optionInfoMap.has(valueActive)) {\n      return optionValueList[optionIndexListForArrowKey[0]];\n    }\n    var activeOption = optionInfoMap.get(valueActive);\n    var activeIndex = activeOption._index;\n    var _index = optionIndexListForArrowKey.indexOf(activeIndex);\n    var _length = optionIndexListForArrowKey.length;\n    return optionValueList[optionIndexListForArrowKey[((direction === 'up' ? _index - 1 : _index + 1) + _length) % _length]];\n  };\n  // Object should be returned when labelInValue is true\n  var getValueAndOptionForCallback = function (stateValue, isEmpty) {\n    if (isEmpty === void 0) {\n      isEmpty = isEmptyValue(stateValue, isMultipleMode);\n    }\n    var value = stateValue;\n    var option = stateValue === undefined ? undefined : Array.isArray(stateValue) ? stateValue.map(getOptionInfoByValue) : getOptionInfoByValue(stateValue);\n    if (labelInValue && !isEmpty) {\n      var getOptionLabel_1 = function (optionValue, optionInfo) {\n        var e_1, _a;\n        if (optionInfo) {\n          return optionInfo.children;\n        }\n        // https://github.com/arco-design/arco-design/issues/442\n        // Make sure parameter value has valid label if props.value is already set\n        var propValue = 'value' in props ? props.value : 'defaultValue' in props ? props.defaultValue : null;\n        // Multiple mode\n        if (Array.isArray(propValue)) {\n          try {\n            for (var propValue_1 = __values(propValue), propValue_1_1 = propValue_1.next(); !propValue_1_1.done; propValue_1_1 = propValue_1.next()) {\n              var item = propValue_1_1.value;\n              if (isObject(item) && item.value === optionValue) {\n                return item.label;\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (propValue_1_1 && !propValue_1_1.done && (_a = propValue_1.return)) _a.call(propValue_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n        }\n        // Single mode\n        else if (isObject(propValue) && propValue.value === optionValue) {\n          return propValue.label;\n        }\n      };\n      if (Array.isArray(stateValue)) {\n        value = stateValue.map(function (optionValue, index) {\n          return {\n            value: optionValue,\n            label: getOptionLabel_1(optionValue, option[index])\n          };\n        });\n      } else {\n        value = {\n          value: stateValue,\n          label: getOptionLabel_1(stateValue, option)\n        };\n      }\n    }\n    return {\n      option: option,\n      value: value\n    };\n  };\n  var tryUpdateSelectValue = function (value) {\n    setValue(value);\n    if (onChange) {\n      var paramsForCallback = getValueAndOptionForCallback(value);\n      onChange(paramsForCallback.value, paramsForCallback.option);\n    }\n  };\n  // 多选时，选择/取消选择一个选项\n  var checkOption = function (optionValue, operation) {\n    // 取消选中时不需要检查option是否存在，因为可能已被外部剔除了此选项\n    if (operation === 'remove' || operation === 'add' && optionInfoMap.get(optionValue)) {\n      var newValue = operation === 'add' ? value.concat(optionValue) : value.filter(function (v) {\n        return v !== optionValue;\n      });\n      var callbackToTrigger = operation === 'add' ? onSelect : onDeselect;\n      tryUpdateSelectValue(newValue);\n      if (typeof callbackToTrigger === 'function') {\n        var paramsForCallback = getValueAndOptionForCallback(optionValue, false);\n        callbackToTrigger(paramsForCallback.value, paramsForCallback.option);\n      }\n    }\n  };\n  var handleOptionClick = function (optionValue, disabled) {\n    if (disabled) {\n      return;\n    }\n    if (isMultipleMode) {\n      checkOption(optionValue, value.indexOf(optionValue) === -1 ? 'add' : 'remove');\n      // 点击一个选项时，清空输入框内容\n      if (!isObject(showSearch) || !showSearch.retainInputValueWhileSelect) {\n        tryUpdateInputValue('', 'optionChecked');\n      }\n    } else {\n      if (optionValue !== value) {\n        tryUpdateSelectValue(optionValue);\n      }\n      setTimeout(function () {\n        tryUpdatePopupVisible(false);\n      });\n    }\n  };\n  // 注册快捷键\n  var hotkeyHandler = getHotkeyHandler(new Map([[Esc.code, function () {\n    return tryUpdatePopupVisible(false);\n  }], [Enter.code, function () {\n    if (popupVisible) {\n      var option = optionInfoMap.get(valueActive);\n      option && handleOptionClick(valueActive, option.disabled);\n    } else {\n      tryUpdatePopupVisible(true);\n    }\n  }], [Tab.code,\n  // 按tab键切换，关闭开启的弹出框\n  function () {\n    return tryUpdatePopupVisible(false);\n  }], [ArrowUp.code, function () {\n    if (popupVisible) {\n      refKeyboardArrowDirection.current = 'up';\n      setValueActive(getValueActive('up'));\n      return false;\n    }\n  }], [ArrowDown.code, function () {\n    if (popupVisible) {\n      refKeyboardArrowDirection.current = 'down';\n      setValueActive(getValueActive('down'));\n      return false;\n    }\n  }]]));\n  var renderPopup = function () {\n    var _a;\n    var _b, _c;\n    // 没有设置弹出框的 width 时，需要在虚拟列表渲染的瞬间获得子元素的最大宽度\n    var needMeasureLongestItem = (triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.autoAlignPopupWidth) === false && (!((_b = triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.style) === null || _b === void 0 ? void 0 : _b.width) || ((_c = triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.style) === null || _c === void 0 ? void 0 : _c.width) === 'auto');\n    // Option 存在复杂子元素时，让获得最长子元素变得困难，此时直接禁用虚拟滚动\n    var needForbidVirtual = needMeasureLongestItem && hasComplexLabelInOptions;\n    var mergedNotFoundContent = 'notFoundContent' in props ? notFoundContent : renderEmpty('Select');\n    // 选项列表元素\n    var eleOptionList = childrenList.length ? React.createElement(VirtualList, __assign({\n      id: instancePopupID,\n      role: \"listbox\",\n      style: dropdownMenuStyle,\n      className: cs(prefixCls + \"-popup-inner\", dropdownMenuClassName),\n      ref: refWrapper,\n      data: childrenList,\n      height: null,\n      isStaticItemHeight: !hasOptGroup,\n      measureLongestItem: needMeasureLongestItem,\n      itemKey: function (child) {\n        return child.props._key;\n      },\n      onMouseDown: preventDefaultEvent,\n      onMouseMove: function () {\n        refKeyboardArrowDirection.current = null;\n      },\n      onScroll: function (e) {\n        return onPopupScroll && onPopupScroll(e.target);\n      }\n    }, virtualListProps, {\n      threshold: needForbidVirtual ? null : virtualListProps === null || virtualListProps === void 0 ? void 0 : virtualListProps.threshold\n    }), function (child) {\n      var _a;\n      if (isSelectOptGroup(child)) {\n        return React.createElement(child.type, __assign({}, child.props, {\n          prefixCls: prefixCls\n        }));\n      }\n      if (isSelectOption(child)) {\n        var optionValue = (_a = child.props) === null || _a === void 0 ? void 0 : _a.value;\n        var userCreatingOptionValue = isObject(userCreatingOption) ? userCreatingOption.value : userCreatingOption;\n        var userCreatedOptionValues = userCreatedOptions.map(function (op) {\n          return isObject(op) ? op.value : op;\n        });\n        var optionProps = {\n          prefixCls: prefixCls,\n          rtl: rtl,\n          _valueActive: valueActive,\n          _valueSelect: value,\n          _isMultipleMode: isMultipleMode,\n          _isUserCreatingOption: allowCreate && userCreatingOptionValue === optionValue,\n          _isUserCreatedOption: allowCreate && userCreatedOptionValues.indexOf(optionValue) > -1,\n          _onClick: handleOptionClick,\n          _onMouseEnter: function (value) {\n            refKeyboardArrowDirection.current === null && setValueActive(value);\n          },\n          _onMouseLeave: function () {\n            refKeyboardArrowDirection.current === null && setValueActive(undefined);\n          }\n        };\n        return child && React.createElement(child.type, __assign({}, child.props, optionProps));\n      }\n      return child;\n    }) : null;\n    // Avoid drop-down box jitter when user is creating a selection\n    var isUserCreating = allowCreate && inputValue;\n    // Dropdown-placeholder when there is no options\n    var eleNoOptionPlaceholder = mergedNotFoundContent && !isUserCreating ? React.createElement(\"div\", {\n      style: dropdownMenuStyle,\n      className: cs(prefixCls + \"-popup-inner\", dropdownMenuClassName)\n    }, mergedNotFoundContent) : null;\n    return React.createElement(\"div\", {\n      className: cs(prefixCls + \"-popup\", (_a = {}, _a[prefixCls + \"-popup-hidden\"] = eleOptionList === null && eleNoOptionPlaceholder === null, _a[prefixCls + \"-popup-multiple\"] = isMultipleMode, _a)),\n      // Make sure hotkey works when dropdown layer get focused\n      tabIndex: -1,\n      onKeyDown: function (e) {\n        return hotkeyHandler(e);\n      }\n    }, typeof dropdownRender === 'function' ? dropdownRender(eleOptionList || eleNoOptionPlaceholder) : eleOptionList || eleNoOptionPlaceholder);\n  };\n  var handleTokenSeparators = function (str) {\n    // clear the timestamp, and then we can judge whether tokenSeparators has been triggered\n    // according to timestamp value\n    refTSLastSeparateTriggered.current = null;\n    if (isMultipleMode && isArray(tokenSeparators) && tokenSeparators.length) {\n      var rawValues_1 = str.split(new RegExp(\"[\" + tokenSeparators.join('') + \"]\"));\n      // 输入了分隔符的情况\n      if (rawValues_1.length > 1) {\n        // record the timestamp of tokenSeparators triggered\n        refTSLastSeparateTriggered.current = Date.now();\n        var splitValues = rawValues_1.filter(function (v, index) {\n          return v && rawValues_1.indexOf(v) === index;\n        });\n        var newValue_1 = value.slice(0);\n        var needUpdate_1 = false;\n        splitValues.forEach(function (v) {\n          if (newValue_1.indexOf(v) === -1 && (allowCreate || optionInfoMap.get(v))) {\n            newValue_1.push(v);\n            needUpdate_1 = true;\n          }\n        });\n        if (needUpdate_1) {\n          tryUpdateSelectValue(newValue_1);\n        }\n      }\n    }\n    return !!refTSLastSeparateTriggered.current;\n  };\n  // SelectView组件事件处理\n  var selectViewEventHandlers = {\n    onFocus: onFocus,\n    onBlur: function (event) {\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n      // when drop-down is always hidden, input-text needs to be cleared after blur\n      !popupVisible && !refPopupExiting.current && tryUpdateInputValue('', 'optionListHide');\n    },\n    onKeyDown: function (event) {\n      // 处理特殊功能键的自动分词\n      if (event.target.tagName === 'INPUT' && event.target.value) {\n        var isTab = event.key === Tab.key;\n        var isEnter = event.key === Enter.key;\n        if (isEnter || isTab) {\n          var suffix = isEnter ? '\\n' : isTab ? '\\t' : '';\n          if (handleTokenSeparators(event.target.value + suffix)) {\n            // 回车后不会触发 onChangeInputValue 回调，所以在这里直接清空输入框\n            tryUpdateInputValue('', 'tokenSeparator');\n          }\n        }\n      }\n      // 处理快捷键\n      hotkeyHandler(event);\n      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n    },\n    onChangeInputValue: function (value, _a) {\n      var inputType = _a.nativeEvent.inputType;\n      // Pasting in the input box will trigger onPaste first and then onChange, but the value of onChange does not contain a newline character.\n      // If word segmentation has just been triggered due to pasting, onChange will no longer attempt word segmentation.\n      // Do NOT use await, need to update input value right away\n      inputType !== 'insertFromPaste' && handleTokenSeparators(value);\n      if (refTSLastSeparateTriggered.current) {\n        tryUpdateInputValue('', 'tokenSeparator');\n      } else {\n        tryUpdateInputValue(value, 'manual');\n      }\n      if (!popupVisible && value) {\n        tryUpdatePopupVisible(true);\n      }\n    },\n    onPaste: function (e) {\n      handleTokenSeparators(e.clipboardData.getData('text'));\n      onPaste === null || onPaste === void 0 ? void 0 : onPaste(e);\n    },\n    // Option Items\n    onRemoveCheckedItem: function (_, index, event) {\n      event.stopPropagation();\n      checkOption(value[index], 'remove');\n    },\n    onClear: function (event) {\n      event.stopPropagation();\n      if (isMultipleMode) {\n        // 保留已经被选中但被disabled的选项值\n        var newValue = value.filter(function (v) {\n          var item = optionInfoMap.get(v);\n          return item && item.disabled;\n        });\n        tryUpdateSelectValue(newValue);\n      } else {\n        tryUpdateSelectValue(undefined);\n      }\n      tryUpdateInputValue('', 'manual');\n      onClear === null || onClear === void 0 ? void 0 : onClear(popupVisible);\n    }\n  };\n  useImperativeHandle(ref, function () {\n    var _a, _b;\n    return {\n      dom: (_a = refSelectView.current) === null || _a === void 0 ? void 0 : _a.dom,\n      focus: function () {\n        refSelectView.current && refSelectView.current.focus();\n      },\n      blur: function () {\n        refSelectView.current && refSelectView.current.blur();\n      },\n      hotkeyHandler: hotkeyHandler,\n      activeOptionValue: valueActive,\n      getOptionInfoByValue: getOptionInfoByValue,\n      getOptionInfoList: function () {\n        return __spreadArray([], __read(optionInfoMap.values()), false).filter(function (info) {\n          return info._valid;\n        });\n      },\n      scrollIntoView: scrollIntoView,\n      getRootDOMNode: (_b = refSelectView.current) === null || _b === void 0 ? void 0 : _b.getRootDOMNode\n    };\n  }, [hotkeyHandler, optionInfoMap, valueActive, getOptionInfoByValue, scrollIntoView]);\n  var renderView = function (eleView) {\n    return React.createElement(Trigger, __assign({\n      ref: function (ref) {\n        return refTrigger.current = ref;\n      },\n      popup: renderPopup,\n      trigger: trigger,\n      disabled: disabled,\n      getPopupContainer: getPopupContainer,\n      classNames: \"slideDynamicOrigin\",\n      autoAlignPopupWidth: true,\n      popupAlign: triggerPopupAlign,\n      popupVisible: popupVisible,\n      unmountOnExit: unmountOnExit,\n      onVisibleChange: tryUpdatePopupVisible,\n      __onExit: function () {\n        refPopupExiting.current = true;\n      },\n      __onExited: function () {\n        refPopupExiting.current = false;\n        tryUpdateInputValue('', 'optionListHide');\n      }\n    }, omit(triggerProps, ['popupVisible', 'onVisibleChange'])), eleView);\n  };\n  var usedTriggerElement = typeof triggerElement === 'function' ? triggerElement(getValueAndOptionForCallback(value)) : triggerElement;\n  return React.createElement(ResizeObserver, {\n    onResize: function () {\n      return refTrigger.current.updatePopupPosition();\n    }\n  }, usedTriggerElement !== undefined && usedTriggerElement !== null ? renderView(usedTriggerElement) : React.createElement(SelectView, __assign({}, props, selectViewEventHandlers, {\n    ref: refSelectView,\n    // state\n    value: value,\n    inputValue: inputValue,\n    popupVisible: popupVisible,\n    // other\n    rtl: rtl,\n    prefixCls: prefixCls,\n    allowCreate: !!allowCreate,\n    ariaControls: instancePopupID,\n    isEmptyValue: isNoOptionSelected,\n    isMultiple: isMultipleMode,\n    onSort: tryUpdateSelectValue,\n    renderText: function (value) {\n      var option = getOptionInfoByValue(value);\n      var text = value;\n      if (isFunction(renderFormat)) {\n        var paramsForCallback = getValueAndOptionForCallback(value, false);\n        text = renderFormat(paramsForCallback.option || null, paramsForCallback.value);\n      } else {\n        var foundLabelFromProps = false;\n        if (labelInValue) {\n          var propValue = props.value || props.defaultValue;\n          if (Array.isArray(propValue)) {\n            var targetLabeledValue = propValue.find(function (item) {\n              return isObject(item) && item.value === value;\n            });\n            if (targetLabeledValue) {\n              text = targetLabeledValue.label;\n              foundLabelFromProps = true;\n            }\n          } else if (isObject(propValue)) {\n            text = propValue.label;\n            foundLabelFromProps = true;\n          }\n        }\n        if (!foundLabelFromProps && option && 'children' in option) {\n          text = option.children;\n        }\n      }\n      return {\n        text: text,\n        disabled: option && option.disabled\n      };\n    },\n    renderView: renderView\n  })));\n}\nvar ForwardRefSelect = React.forwardRef(Select);\nvar SelectComponent = ForwardRefSelect;\nSelectComponent.displayName = 'Select';\nSelectComponent.Option = Option;\nSelectComponent.OptGroup = OptGroup;\nexport default SelectComponent;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__values","TypeError","__spreadArray","to","from","pack","l","Array","slice","concat","React","useCallback","useContext","useEffect","useImperativeHandle","useMemo","useRef","useState","cs","ArrowUp","ArrowDown","Enter","Esc","Tab","Trigger","OptGroup","Option","ResizeObserver","isArray","isFunction","isObject","getHotkeyHandler","warning","SelectView","VirtualList","preventDefaultEvent","isEmptyValue","getValidValue","isSelectOption","isSelectOptGroup","flatChildren","ConfigContext","useMergeValue","omit","useMergeProps","useId","USER_CREATING_OPTION_ORIGIN","defaultProps","trigger","bordered","filterOption","unmountOnExit","defaultActiveFirstOption","triggerPopupAlign","bottom","Select","baseProps","ref","_a","getPrefixCls","renderEmpty","componentConfig","rtl","props","children","renderFormat","disabled","notFoundContent","showSearch","tokenSeparators","options","labelInValue","getPopupContainer","triggerElement","triggerProps","dropdownRender","dropdownMenuStyle","dropdownMenuClassName","virtualListProps","onChange","onSelect","onDeselect","onClear","onSearch","onFocus","onBlur","onPopupScroll","onVisibleChange","onInputValueChange","onPaste","onKeyDown","mode","allowCreate","prefixCls","isMultipleMode","_b","defaultValue","stateValue","setValue","_c","inputValue","undefined","setInputValue","stateInputValue","_d","defaultPopupVisible","popupVisible","setPopupVisible","_e","userCreatingOption","setUserCreatingOption","_f","userCreatedOptions","setUserCreatedOptions","_g","valueActive","setValueActive","_h","childrenList","optionInfoMap","optionValueList","optionIndexListForArrowKey","hasOptGroup","hasComplexLabelInOptions","refWrapper","refTrigger","refSelectView","refValueMap","refKeyboardArrowDirection","refOnInputChangeCallbackValue","refOnInputChangeCallbackReason","refTSLastSeparateTriggered","refPopupExiting","instancePopupID","isNoOptionSelected","valueActiveDefault","firstValue","isFirstValueOptionSelectable","get","_valid","isFirstCreatingOption","_origin","scrollIntoView","optionValue","activeOption","current","child","scrollTo","key","_key","userCreatedOptionFormatter","creating","formatter","tryUpdateInputValue","reason","tryUpdatePopupVisible","firstValue_1","has","setTimeout","JSON","stringify","map","filter","x","indexOf","nextUserCreatedOptions","currentValueList_1","newUserCreatedOptions","v","option","find","item","op","validUserCreatedOptions","opValue","getOptionsValueString","toString","getOptionInfoByValue","index","findIndex","splice","getValueActive","direction","activeIndex","_index","_length","getValueAndOptionForCallback","isEmpty","getOptionLabel_1","optionInfo","e_1","propValue","propValue_1","propValue_1_1","label","e_1_1","return","tryUpdateSelectValue","paramsForCallback","checkOption","operation","newValue","callbackToTrigger","handleOptionClick","retainInputValueWhileSelect","hotkeyHandler","Map","code","renderPopup","needMeasureLongestItem","autoAlignPopupWidth","style","width","needForbidVirtual","mergedNotFoundContent","eleOptionList","createElement","id","role","className","data","height","isStaticItemHeight","measureLongestItem","itemKey","onMouseDown","onMouseMove","onScroll","target","threshold","type","userCreatingOptionValue","userCreatedOptionValues","optionProps","_valueActive","_valueSelect","_isMultipleMode","_isUserCreatingOption","_isUserCreatedOption","_onClick","_onMouseEnter","_onMouseLeave","isUserCreating","eleNoOptionPlaceholder","tabIndex","handleTokenSeparators","str","rawValues_1","split","RegExp","join","Date","now","splitValues","newValue_1","needUpdate_1","forEach","selectViewEventHandlers","event","tagName","isTab","isEnter","suffix","onChangeInputValue","inputType","nativeEvent","clipboardData","getData","onRemoveCheckedItem","_","stopPropagation","dom","focus","blur","activeOptionValue","getOptionInfoList","values","info","getRootDOMNode","renderView","eleView","popup","classNames","popupAlign","__onExit","__onExited","usedTriggerElement","onResize","updatePopupPosition","ariaControls","isMultiple","onSort","renderText","text","foundLabelFromProps","targetLabeledValue","ForwardRefSelect","forwardRef","SelectComponent","displayName"],"sources":["D:/Nodejs/oj-frontend/node_modules/@arco-design/web-react/es/Select/select.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React, { useCallback, useContext, useEffect, useImperativeHandle, useMemo, useRef, useState, } from 'react';\nimport cs from '../_util/classNames';\nimport { ArrowUp, ArrowDown, Enter, Esc, Tab } from '../_util/keycode';\nimport Trigger from '../Trigger';\nimport OptGroup from './opt-group';\nimport Option from './option';\nimport ResizeObserver from '../_util/resizeObserver';\nimport { isArray, isFunction, isObject } from '../_util/is';\nimport getHotkeyHandler from '../_util/getHotkeyHandler';\nimport warning from '../_util/warning';\nimport SelectView from '../_class/select-view';\nimport VirtualList from '../_class/VirtualList';\nimport { preventDefaultEvent, isEmptyValue, getValidValue, isSelectOption, isSelectOptGroup, flatChildren, } from './utils';\nimport { ConfigContext } from '../ConfigProvider';\nimport useMergeValue from '../_util/hooks/useMergeValue';\nimport omit from '../_util/omit';\nimport useMergeProps from '../_util/hooks/useMergeProps';\nimport useId from '../_util/hooks/useId';\n// 用户创建中的option的origin标识\nvar USER_CREATING_OPTION_ORIGIN = 'userCreatingOption';\nvar defaultProps = {\n    trigger: 'click',\n    bordered: true,\n    filterOption: true,\n    unmountOnExit: true,\n    defaultActiveFirstOption: true,\n};\nvar triggerPopupAlign = { bottom: 4 };\nfunction Select(baseProps, ref) {\n    var _a = useContext(ConfigContext), getPrefixCls = _a.getPrefixCls, renderEmpty = _a.renderEmpty, componentConfig = _a.componentConfig, rtl = _a.rtl;\n    var props = useMergeProps(baseProps, defaultProps, componentConfig === null || componentConfig === void 0 ? void 0 : componentConfig.Select);\n    var children = props.children, renderFormat = props.renderFormat, defaultActiveFirstOption = props.defaultActiveFirstOption, disabled = props.disabled, unmountOnExit = props.unmountOnExit, notFoundContent = props.notFoundContent, showSearch = props.showSearch, tokenSeparators = props.tokenSeparators, options = props.options, filterOption = props.filterOption, labelInValue = props.labelInValue, getPopupContainer = props.getPopupContainer, trigger = props.trigger, triggerElement = props.triggerElement, triggerProps = props.triggerProps, dropdownRender = props.dropdownRender, dropdownMenuStyle = props.dropdownMenuStyle, dropdownMenuClassName = props.dropdownMenuClassName, virtualListProps = props.virtualListProps, \n    // events\n    onChange = props.onChange, onSelect = props.onSelect, onDeselect = props.onDeselect, onClear = props.onClear, onSearch = props.onSearch, onFocus = props.onFocus, onBlur = props.onBlur, onPopupScroll = props.onPopupScroll, onVisibleChange = props.onVisibleChange, onInputValueChange = props.onInputValueChange, onPaste = props.onPaste, onKeyDown = props.onKeyDown;\n    // TODO 兼容逻辑，3.0 移除 tags 模式\n    var mode = props.mode, allowCreate = props.allowCreate;\n    if (mode === 'tags') {\n        mode = 'multiple';\n        allowCreate = true;\n        warning(true, \"[Arco Select] The 'tags' mode will be removed in the next major version, please use {mode: \\\"multiple\\\", allowCreate: true} instead.\");\n    }\n    var prefixCls = getPrefixCls('select');\n    var isMultipleMode = mode === 'multiple';\n    // TODO: 统一 useMergeValue 函数的表现\n    var _b = __read(useState(getValidValue(props.defaultValue, isMultipleMode, labelInValue)), 2), stateValue = _b[0], setValue = _b[1];\n    var value = 'value' in props ? getValidValue(props.value, isMultipleMode, labelInValue) : stateValue;\n    var _c = __read(useMergeValue('', {\n        value: 'inputValue' in props ? props.inputValue || '' : undefined,\n    }), 3), inputValue = _c[0], setInputValue = _c[1], stateInputValue = _c[2];\n    var _d = __read(useMergeValue(false, {\n        defaultValue: props.defaultPopupVisible,\n        value: 'popupVisible' in props\n            ? props.popupVisible\n            : triggerProps && 'popupVisible' in triggerProps\n                ? triggerProps.popupVisible\n                : undefined,\n    }), 2), popupVisible = _d[0], setPopupVisible = _d[1];\n    // allowCreate 时，用户正在创建的选项值\n    var _e = __read(useState(null), 2), userCreatingOption = _e[0], setUserCreatingOption = _e[1];\n    // allowCreate 时，由用户输入而扩展到选项中的值\n    var _f = __read(useState([]), 2), userCreatedOptions = _f[0], setUserCreatedOptions = _f[1];\n    // 具有选中态或者 hover 态的 option 的 value\n    var _g = __read(useState(isArray(value) ? value[0] : value), 2), valueActive = _g[0], setValueActive = _g[1];\n    // 缓存较为耗时的 flatChildren 的结果\n    var _h = useMemo(function () {\n        return flatChildren({ children: children, options: options, filterOption: filterOption }, {\n            prefixCls: prefixCls,\n            inputValue: inputValue,\n            userCreatedOptions: userCreatedOptions,\n            userCreatingOption: userCreatingOption,\n        });\n    }, [children, options, filterOption, inputValue, userCreatingOption, userCreatedOptions]), childrenList = _h.childrenList, optionInfoMap = _h.optionInfoMap, optionValueList = _h.optionValueList, optionIndexListForArrowKey = _h.optionIndexListForArrowKey, hasOptGroup = _h.hasOptGroup, hasComplexLabelInOptions = _h.hasComplexLabelInOptions;\n    // ref\n    var refWrapper = useRef(null);\n    var refTrigger = useRef(null);\n    var refSelectView = useRef(null);\n    // 用来保存 value 和选中项的映射\n    var refValueMap = useRef([]);\n    // 用 none 表示目前处于键盘操作中，忽略鼠标的 onMouseEnter 和 onMouseLeave 事件\n    var refKeyboardArrowDirection = useRef(null);\n    // 触发 onInputValueChange 回调的值\n    var refOnInputChangeCallbackValue = useRef(inputValue);\n    // 触发 onInputValueChange 回调的原因\n    var refOnInputChangeCallbackReason = useRef(null);\n    // 上次成功触发自动分词的时间\n    var refTSLastSeparateTriggered = useRef(0);\n    // Whether in the hidden animation of drop-down\n    var refPopupExiting = useRef(false);\n    // Unique ID of this select instance\n    var instancePopupID = useId(prefixCls + \"-popup-\");\n    var isNoOptionSelected = isEmptyValue(value, isMultipleMode);\n    var valueActiveDefault = useMemo(function () {\n        var _a, _b;\n        if (defaultActiveFirstOption) {\n            var firstValue = isArray(value) ? value[0] : value;\n            // only valid option will render in option list\n            // if it's not rendered (e.g. filtered by user-search), ignore it\n            var isFirstValueOptionSelectable = !isNoOptionSelected && ((_a = optionInfoMap.get(firstValue)) === null || _a === void 0 ? void 0 : _a._valid);\n            // 是否第一个 option 是创建中选项\n            var isFirstCreatingOption = ((_b = optionInfoMap === null || optionInfoMap === void 0 ? void 0 : optionInfoMap.get(optionValueList[0])) === null || _b === void 0 ? void 0 : _b._origin) === USER_CREATING_OPTION_ORIGIN;\n            return isFirstValueOptionSelectable && !isFirstCreatingOption\n                ? firstValue\n                : optionValueList[optionIndexListForArrowKey[0]];\n        }\n        return undefined;\n    }, [\n        value,\n        optionInfoMap,\n        optionValueList,\n        optionIndexListForArrowKey,\n        defaultActiveFirstOption,\n        isNoOptionSelected,\n    ]);\n    var scrollIntoView = useCallback(function (optionValue, options) {\n        var _a;\n        var activeOption = optionInfoMap.get(optionValue);\n        if (refWrapper.current && ((_a = activeOption === null || activeOption === void 0 ? void 0 : activeOption.child) === null || _a === void 0 ? void 0 : _a.props)) {\n            refWrapper.current.scrollTo({ key: activeOption.child.props._key, options: options });\n        }\n    }, [optionInfoMap]);\n    var userCreatedOptionFormatter = useCallback(function (inputValue, creating) {\n        if (creating === void 0) { creating = false; }\n        return isObject(allowCreate) && typeof (allowCreate === null || allowCreate === void 0 ? void 0 : allowCreate.formatter) === 'function'\n            ? allowCreate.formatter(inputValue, creating)\n            : inputValue;\n    }, [allowCreate]);\n    // Try to update inputValue and trigger onInputValueChange callback\n    var tryUpdateInputValue = function (value, reason) {\n        if (value !== refOnInputChangeCallbackValue.current ||\n            reason !== refOnInputChangeCallbackReason.current) {\n            setInputValue(value);\n            refOnInputChangeCallbackValue.current = value;\n            refOnInputChangeCallbackReason.current = reason;\n            onInputValueChange && onInputValueChange(value, reason);\n        }\n    };\n    // 尝试更新 popupVisible，触发 onVisibleChange\n    var tryUpdatePopupVisible = function (value) {\n        if (popupVisible !== value) {\n            setPopupVisible(value);\n            onVisibleChange && onVisibleChange(value);\n            triggerProps && triggerProps.onVisibleChange && triggerProps.onVisibleChange(value);\n        }\n    };\n    // 处理模式切换时 value 格式的校正\n    useEffect(function () {\n        if (isMultipleMode) {\n            if (!Array.isArray(value)) {\n                setValue(value === undefined ? [] : [value]);\n            }\n        }\n        else if (Array.isArray(value)) {\n            setValue(value.length === 0 ? undefined : value[0]);\n        }\n    }, [isMultipleMode, value]);\n    // 选项下拉框显示/隐藏时的一些自动行为\n    useEffect(function () {\n        if (popupVisible) {\n            // 重新设置 hover 态的 Option\n            setValueActive(valueActiveDefault);\n            // 在弹出框动画结束之后再执行scrollIntoView，否则会有不必要的滚动产生\n            var firstValue_1 = isArray(value) ? value[0] : value;\n            if (!isNoOptionSelected && optionInfoMap.has(firstValue_1)) {\n                setTimeout(function () { return scrollIntoView(firstValue_1); });\n            }\n        }\n    }, [popupVisible]);\n    // 处理键盘选择Option时的列表滚动\n    useEffect(function () {\n        if (refKeyboardArrowDirection.current === 'up' ||\n            refKeyboardArrowDirection.current === 'down') {\n            scrollIntoView(valueActive);\n            refKeyboardArrowDirection.current = 'none';\n        }\n    }, [valueActive]);\n    // 选项列表改变后，将 active 选项重置\n    useEffect(function () {\n        setValueActive(valueActiveDefault);\n    }, [JSON.stringify(childrenList.map(function (child) { var _a; return (_a = child === null || child === void 0 ? void 0 : child.props) === null || _a === void 0 ? void 0 : _a.value; }))]);\n    // 更新 refValueMap，避免数组规模无节制扩大\n    useEffect(function () {\n        refValueMap.current = refValueMap.current.filter(function (x) {\n            return isMultipleMode\n                ? isArray(value) && value.indexOf(x.value) > -1\n                : x.value === value;\n        });\n    }, [value, isMultipleMode]);\n    // allowCreate 时，value 改变时更新下拉框选项\n    useEffect(function () {\n        if (allowCreate) {\n            var nextUserCreatedOptions = void 0;\n            if (isEmptyValue(value, isMultipleMode)) {\n                nextUserCreatedOptions = [];\n            }\n            else {\n                // 将单选和多选的情况统一处理\n                var currentValueList_1 = Array.isArray(value) ? value : [value];\n                // 将无对应下拉框选项的 value 当作用户创建的选项\n                var newUserCreatedOptions = currentValueList_1\n                    .filter(function (v) {\n                    var _a;\n                    var option = optionInfoMap.get(v) || ((_a = refValueMap.current.find(function (item) { return item.value === v; })) === null || _a === void 0 ? void 0 : _a.option);\n                    return !option || option._origin === USER_CREATING_OPTION_ORIGIN;\n                })\n                    .map(function (op) { return userCreatedOptionFormatter(op); });\n                // 将 value 中不存在的 Option 移除\n                var validUserCreatedOptions = userCreatedOptions.filter(function (op) {\n                    var opValue = isObject(op) ? op.value : op;\n                    return currentValueList_1.indexOf(opValue) !== -1;\n                });\n                nextUserCreatedOptions = validUserCreatedOptions.concat(newUserCreatedOptions);\n            }\n            var getOptionsValueString = function (options) {\n                return options.map(function (option) { return (isObject(option) ? option.value : option); }).toString();\n            };\n            // only update state when user-created options changed\n            if (getOptionsValueString(nextUserCreatedOptions) !== getOptionsValueString(userCreatedOptions)) {\n                setUserCreatedOptions(nextUserCreatedOptions);\n            }\n        }\n    }, [value, allowCreate, isMultipleMode, userCreatedOptionFormatter]);\n    // allowCreate 时，根据输入内容动态修改下拉框选项\n    useEffect(function () {\n        if (allowCreate) {\n            // 避免正在输入的内容覆盖已有的选项\n            setUserCreatingOption(inputValue && !optionInfoMap.has(inputValue)\n                ? userCreatedOptionFormatter(inputValue, true)\n                : null);\n        }\n    }, [inputValue, userCreatedOptionFormatter]);\n    // 在 inputValue 变化时，适时触发 onSearch\n    useEffect(function () {\n        var reason = refOnInputChangeCallbackReason.current;\n        if (stateInputValue === inputValue && (reason === 'manual' || reason === 'optionListHide')) {\n            onSearch && onSearch(inputValue, reason);\n        }\n    }, [inputValue]);\n    var getOptionInfoByValue = useCallback(function (value) {\n        var option = optionInfoMap.get(value);\n        if (option) {\n            var index = refValueMap.current.findIndex(function (item) { return item.value === value; });\n            if (index > -1) {\n                refValueMap.current.splice(index, 1, { value: value, option: option });\n            }\n            else {\n                refValueMap.current.push({ value: value, option: option });\n            }\n            return option;\n        }\n        var item = refValueMap.current.find(function (x) { return x.value === value; });\n        return item && item.option;\n    }, [optionInfoMap]);\n    // 使用方向键选择时，获取下一个 active option 的值\n    var getValueActive = function (direction) {\n        if (!optionIndexListForArrowKey.length) {\n            return undefined;\n        }\n        if (valueActive === undefined || !optionInfoMap.has(valueActive)) {\n            return optionValueList[optionIndexListForArrowKey[0]];\n        }\n        var activeOption = optionInfoMap.get(valueActive);\n        var activeIndex = activeOption._index;\n        var _index = optionIndexListForArrowKey.indexOf(activeIndex);\n        var _length = optionIndexListForArrowKey.length;\n        return optionValueList[optionIndexListForArrowKey[((direction === 'up' ? _index - 1 : _index + 1) + _length) % _length]];\n    };\n    // Object should be returned when labelInValue is true\n    var getValueAndOptionForCallback = function (stateValue, isEmpty) {\n        if (isEmpty === void 0) { isEmpty = isEmptyValue(stateValue, isMultipleMode); }\n        var value = stateValue;\n        var option = stateValue === undefined\n            ? undefined\n            : Array.isArray(stateValue)\n                ? stateValue.map(getOptionInfoByValue)\n                : getOptionInfoByValue(stateValue);\n        if (labelInValue && !isEmpty) {\n            var getOptionLabel_1 = function (optionValue, optionInfo) {\n                var e_1, _a;\n                if (optionInfo) {\n                    return optionInfo.children;\n                }\n                // https://github.com/arco-design/arco-design/issues/442\n                // Make sure parameter value has valid label if props.value is already set\n                var propValue = 'value' in props ? props.value : 'defaultValue' in props ? props.defaultValue : null;\n                // Multiple mode\n                if (Array.isArray(propValue)) {\n                    try {\n                        for (var propValue_1 = __values(propValue), propValue_1_1 = propValue_1.next(); !propValue_1_1.done; propValue_1_1 = propValue_1.next()) {\n                            var item = propValue_1_1.value;\n                            if (isObject(item) && item.value === optionValue) {\n                                return item.label;\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (propValue_1_1 && !propValue_1_1.done && (_a = propValue_1.return)) _a.call(propValue_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                // Single mode\n                else if (isObject(propValue) && propValue.value === optionValue) {\n                    return propValue.label;\n                }\n            };\n            if (Array.isArray(stateValue)) {\n                value = stateValue.map(function (optionValue, index) { return ({\n                    value: optionValue,\n                    label: getOptionLabel_1(optionValue, option[index]),\n                }); });\n            }\n            else {\n                value = { value: stateValue, label: getOptionLabel_1(stateValue, option) };\n            }\n        }\n        return { option: option, value: value };\n    };\n    var tryUpdateSelectValue = function (value) {\n        setValue(value);\n        if (onChange) {\n            var paramsForCallback = getValueAndOptionForCallback(value);\n            onChange(paramsForCallback.value, paramsForCallback.option);\n        }\n    };\n    // 多选时，选择/取消选择一个选项\n    var checkOption = function (optionValue, operation) {\n        // 取消选中时不需要检查option是否存在，因为可能已被外部剔除了此选项\n        if (operation === 'remove' || (operation === 'add' && optionInfoMap.get(optionValue))) {\n            var newValue = operation === 'add'\n                ? value.concat(optionValue)\n                : value.filter(function (v) { return v !== optionValue; });\n            var callbackToTrigger = operation === 'add' ? onSelect : onDeselect;\n            tryUpdateSelectValue(newValue);\n            if (typeof callbackToTrigger === 'function') {\n                var paramsForCallback = getValueAndOptionForCallback(optionValue, false);\n                callbackToTrigger(paramsForCallback.value, paramsForCallback.option);\n            }\n        }\n    };\n    var handleOptionClick = function (optionValue, disabled) {\n        if (disabled) {\n            return;\n        }\n        if (isMultipleMode) {\n            checkOption(optionValue, value.indexOf(optionValue) === -1 ? 'add' : 'remove');\n            // 点击一个选项时，清空输入框内容\n            if (!isObject(showSearch) || !showSearch.retainInputValueWhileSelect) {\n                tryUpdateInputValue('', 'optionChecked');\n            }\n        }\n        else {\n            if (optionValue !== value) {\n                tryUpdateSelectValue(optionValue);\n            }\n            setTimeout(function () {\n                tryUpdatePopupVisible(false);\n            });\n        }\n    };\n    // 注册快捷键\n    var hotkeyHandler = getHotkeyHandler(new Map([\n        [Esc.code, function () { return tryUpdatePopupVisible(false); }],\n        [\n            Enter.code,\n            function () {\n                if (popupVisible) {\n                    var option = optionInfoMap.get(valueActive);\n                    option && handleOptionClick(valueActive, option.disabled);\n                }\n                else {\n                    tryUpdatePopupVisible(true);\n                }\n            },\n        ],\n        [\n            Tab.code,\n            // 按tab键切换，关闭开启的弹出框\n            function () { return tryUpdatePopupVisible(false); },\n        ],\n        [\n            ArrowUp.code,\n            function () {\n                if (popupVisible) {\n                    refKeyboardArrowDirection.current = 'up';\n                    setValueActive(getValueActive('up'));\n                    return false;\n                }\n            },\n        ],\n        [\n            ArrowDown.code,\n            function () {\n                if (popupVisible) {\n                    refKeyboardArrowDirection.current = 'down';\n                    setValueActive(getValueActive('down'));\n                    return false;\n                }\n            },\n        ],\n    ]));\n    var renderPopup = function () {\n        var _a;\n        var _b, _c;\n        // 没有设置弹出框的 width 时，需要在虚拟列表渲染的瞬间获得子元素的最大宽度\n        var needMeasureLongestItem = (triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.autoAlignPopupWidth) === false &&\n            (!((_b = triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.style) === null || _b === void 0 ? void 0 : _b.width) || ((_c = triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.style) === null || _c === void 0 ? void 0 : _c.width) === 'auto');\n        // Option 存在复杂子元素时，让获得最长子元素变得困难，此时直接禁用虚拟滚动\n        var needForbidVirtual = needMeasureLongestItem && hasComplexLabelInOptions;\n        var mergedNotFoundContent = 'notFoundContent' in props ? notFoundContent : renderEmpty('Select');\n        // 选项列表元素\n        var eleOptionList = childrenList.length ? (React.createElement(VirtualList, __assign({ id: instancePopupID, role: \"listbox\", style: dropdownMenuStyle, className: cs(prefixCls + \"-popup-inner\", dropdownMenuClassName), ref: refWrapper, data: childrenList, height: null, isStaticItemHeight: !hasOptGroup, measureLongestItem: needMeasureLongestItem, itemKey: function (child) { return child.props._key; }, onMouseDown: preventDefaultEvent, onMouseMove: function () {\n                refKeyboardArrowDirection.current = null;\n            }, onScroll: function (e) { return onPopupScroll && onPopupScroll(e.target); } }, virtualListProps, { threshold: needForbidVirtual ? null : virtualListProps === null || virtualListProps === void 0 ? void 0 : virtualListProps.threshold }), function (child) {\n            var _a;\n            if (isSelectOptGroup(child)) {\n                return React.createElement(child.type, __assign({}, child.props, { prefixCls: prefixCls }));\n            }\n            if (isSelectOption(child)) {\n                var optionValue = (_a = child.props) === null || _a === void 0 ? void 0 : _a.value;\n                var userCreatingOptionValue = isObject(userCreatingOption)\n                    ? userCreatingOption.value\n                    : userCreatingOption;\n                var userCreatedOptionValues = userCreatedOptions.map(function (op) {\n                    return isObject(op) ? op.value : op;\n                });\n                var optionProps = {\n                    prefixCls: prefixCls,\n                    rtl: rtl,\n                    _valueActive: valueActive,\n                    _valueSelect: value,\n                    _isMultipleMode: isMultipleMode,\n                    _isUserCreatingOption: allowCreate && userCreatingOptionValue === optionValue,\n                    _isUserCreatedOption: allowCreate && userCreatedOptionValues.indexOf(optionValue) > -1,\n                    _onClick: handleOptionClick,\n                    _onMouseEnter: function (value) {\n                        refKeyboardArrowDirection.current === null && setValueActive(value);\n                    },\n                    _onMouseLeave: function () {\n                        refKeyboardArrowDirection.current === null && setValueActive(undefined);\n                    },\n                };\n                return child && React.createElement(child.type, __assign({}, child.props, optionProps));\n            }\n            return child;\n        })) : null;\n        // Avoid drop-down box jitter when user is creating a selection\n        var isUserCreating = allowCreate && inputValue;\n        // Dropdown-placeholder when there is no options\n        var eleNoOptionPlaceholder = mergedNotFoundContent && !isUserCreating ? (React.createElement(\"div\", { style: dropdownMenuStyle, className: cs(prefixCls + \"-popup-inner\", dropdownMenuClassName) }, mergedNotFoundContent)) : null;\n        return (React.createElement(\"div\", { className: cs(prefixCls + \"-popup\", (_a = {},\n                _a[prefixCls + \"-popup-hidden\"] = eleOptionList === null && eleNoOptionPlaceholder === null,\n                _a[prefixCls + \"-popup-multiple\"] = isMultipleMode,\n                _a)), \n            // Make sure hotkey works when dropdown layer get focused\n            tabIndex: -1, onKeyDown: function (e) { return hotkeyHandler(e); } }, typeof dropdownRender === 'function'\n            ? dropdownRender(eleOptionList || eleNoOptionPlaceholder)\n            : eleOptionList || eleNoOptionPlaceholder));\n    };\n    var handleTokenSeparators = function (str) {\n        // clear the timestamp, and then we can judge whether tokenSeparators has been triggered\n        // according to timestamp value\n        refTSLastSeparateTriggered.current = null;\n        if (isMultipleMode && isArray(tokenSeparators) && tokenSeparators.length) {\n            var rawValues_1 = str.split(new RegExp(\"[\" + tokenSeparators.join('') + \"]\"));\n            // 输入了分隔符的情况\n            if (rawValues_1.length > 1) {\n                // record the timestamp of tokenSeparators triggered\n                refTSLastSeparateTriggered.current = Date.now();\n                var splitValues = rawValues_1.filter(function (v, index) { return v && rawValues_1.indexOf(v) === index; });\n                var newValue_1 = value.slice(0);\n                var needUpdate_1 = false;\n                splitValues.forEach(function (v) {\n                    if (newValue_1.indexOf(v) === -1 && (allowCreate || optionInfoMap.get(v))) {\n                        newValue_1.push(v);\n                        needUpdate_1 = true;\n                    }\n                });\n                if (needUpdate_1) {\n                    tryUpdateSelectValue(newValue_1);\n                }\n            }\n        }\n        return !!refTSLastSeparateTriggered.current;\n    };\n    // SelectView组件事件处理\n    var selectViewEventHandlers = {\n        onFocus: onFocus,\n        onBlur: function (event) {\n            onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n            // when drop-down is always hidden, input-text needs to be cleared after blur\n            !popupVisible && !refPopupExiting.current && tryUpdateInputValue('', 'optionListHide');\n        },\n        onKeyDown: function (event) {\n            // 处理特殊功能键的自动分词\n            if (event.target.tagName === 'INPUT' && event.target.value) {\n                var isTab = event.key === Tab.key;\n                var isEnter = event.key === Enter.key;\n                if (isEnter || isTab) {\n                    var suffix = isEnter ? '\\n' : isTab ? '\\t' : '';\n                    if (handleTokenSeparators(event.target.value + suffix)) {\n                        // 回车后不会触发 onChangeInputValue 回调，所以在这里直接清空输入框\n                        tryUpdateInputValue('', 'tokenSeparator');\n                    }\n                }\n            }\n            // 处理快捷键\n            hotkeyHandler(event);\n            onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n        },\n        onChangeInputValue: function (value, _a) {\n            var inputType = _a.nativeEvent.inputType;\n            // Pasting in the input box will trigger onPaste first and then onChange, but the value of onChange does not contain a newline character.\n            // If word segmentation has just been triggered due to pasting, onChange will no longer attempt word segmentation.\n            // Do NOT use await, need to update input value right away\n            inputType !== 'insertFromPaste' && handleTokenSeparators(value);\n            if (refTSLastSeparateTriggered.current) {\n                tryUpdateInputValue('', 'tokenSeparator');\n            }\n            else {\n                tryUpdateInputValue(value, 'manual');\n            }\n            if (!popupVisible && value) {\n                tryUpdatePopupVisible(true);\n            }\n        },\n        onPaste: function (e) {\n            handleTokenSeparators(e.clipboardData.getData('text'));\n            onPaste === null || onPaste === void 0 ? void 0 : onPaste(e);\n        },\n        // Option Items\n        onRemoveCheckedItem: function (_, index, event) {\n            event.stopPropagation();\n            checkOption(value[index], 'remove');\n        },\n        onClear: function (event) {\n            event.stopPropagation();\n            if (isMultipleMode) {\n                // 保留已经被选中但被disabled的选项值\n                var newValue = value.filter(function (v) {\n                    var item = optionInfoMap.get(v);\n                    return item && item.disabled;\n                });\n                tryUpdateSelectValue(newValue);\n            }\n            else {\n                tryUpdateSelectValue(undefined);\n            }\n            tryUpdateInputValue('', 'manual');\n            onClear === null || onClear === void 0 ? void 0 : onClear(popupVisible);\n        },\n    };\n    useImperativeHandle(ref, function () {\n        var _a, _b;\n        return ({\n            dom: (_a = refSelectView.current) === null || _a === void 0 ? void 0 : _a.dom,\n            focus: function () {\n                refSelectView.current && refSelectView.current.focus();\n            },\n            blur: function () {\n                refSelectView.current && refSelectView.current.blur();\n            },\n            hotkeyHandler: hotkeyHandler,\n            activeOptionValue: valueActive,\n            getOptionInfoByValue: getOptionInfoByValue,\n            getOptionInfoList: function () { return __spreadArray([], __read(optionInfoMap.values()), false).filter(function (info) { return info._valid; }); },\n            scrollIntoView: scrollIntoView,\n            getRootDOMNode: (_b = refSelectView.current) === null || _b === void 0 ? void 0 : _b.getRootDOMNode,\n        });\n    }, [hotkeyHandler, optionInfoMap, valueActive, getOptionInfoByValue, scrollIntoView]);\n    var renderView = function (eleView) {\n        return (React.createElement(Trigger, __assign({ ref: function (ref) { return (refTrigger.current = ref); }, popup: renderPopup, trigger: trigger, disabled: disabled, getPopupContainer: getPopupContainer, classNames: \"slideDynamicOrigin\", autoAlignPopupWidth: true, popupAlign: triggerPopupAlign, popupVisible: popupVisible, unmountOnExit: unmountOnExit, onVisibleChange: tryUpdatePopupVisible, __onExit: function () {\n                refPopupExiting.current = true;\n            }, __onExited: function () {\n                refPopupExiting.current = false;\n                tryUpdateInputValue('', 'optionListHide');\n            } }, omit(triggerProps, ['popupVisible', 'onVisibleChange'])), eleView));\n    };\n    var usedTriggerElement = typeof triggerElement === 'function'\n        ? triggerElement(getValueAndOptionForCallback(value))\n        : triggerElement;\n    return (React.createElement(ResizeObserver, { onResize: function () { return refTrigger.current.updatePopupPosition(); } }, usedTriggerElement !== undefined && usedTriggerElement !== null ? (renderView(usedTriggerElement)) : (React.createElement(SelectView, __assign({}, props, selectViewEventHandlers, { ref: refSelectView, \n        // state\n        value: value, inputValue: inputValue, popupVisible: popupVisible, \n        // other\n        rtl: rtl, prefixCls: prefixCls, allowCreate: !!allowCreate, ariaControls: instancePopupID, isEmptyValue: isNoOptionSelected, isMultiple: isMultipleMode, onSort: tryUpdateSelectValue, renderText: function (value) {\n            var option = getOptionInfoByValue(value);\n            var text = value;\n            if (isFunction(renderFormat)) {\n                var paramsForCallback = getValueAndOptionForCallback(value, false);\n                text = renderFormat(paramsForCallback.option || null, paramsForCallback.value);\n            }\n            else {\n                var foundLabelFromProps = false;\n                if (labelInValue) {\n                    var propValue = props.value || props.defaultValue;\n                    if (Array.isArray(propValue)) {\n                        var targetLabeledValue = propValue.find(function (item) { return isObject(item) && item.value === value; });\n                        if (targetLabeledValue) {\n                            text = targetLabeledValue.label;\n                            foundLabelFromProps = true;\n                        }\n                    }\n                    else if (isObject(propValue)) {\n                        text = propValue.label;\n                        foundLabelFromProps = true;\n                    }\n                }\n                if (!foundLabelFromProps && option && 'children' in option) {\n                    text = option.children;\n                }\n            }\n            return {\n                text: text,\n                disabled: option && option.disabled,\n            };\n        }, renderView: renderView })))));\n}\nvar ForwardRefSelect = React.forwardRef(Select);\nvar SelectComponent = ForwardRefSelect;\nSelectComponent.displayName = 'Select';\nSelectComponent.Option = Option;\nSelectComponent.OptGroup = OptGroup;\nexport default SelectComponent;\n"],"mappings":";;;;;;AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAET,CAAC,EAAE;EAClD,IAAIU,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACF,CAAC,EAAE,OAAOD,CAAC;EAChB,IAAIV,CAAC,GAAGW,CAAC,CAACJ,IAAI,CAACG,CAAC,CAAC;IAAEI,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAACf,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACa,CAAC,GAAGd,CAAC,CAACiB,IAAI,CAAC,CAAC,EAAEC,IAAI,EAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKP,CAAC,GAAGX,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEW,CAAC,CAACJ,IAAI,CAACP,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAIgB,CAAC,EAAE,MAAMA,CAAC,CAACK,KAAK;IAAE;EACpC;EACA,OAAON,EAAE;AACb,CAAC;AACD,IAAIO,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,UAASZ,CAAC,EAAE;EAClD,IAAIX,CAAC,GAAG,OAAOa,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,QAAQ;IAAEF,CAAC,GAAGZ,CAAC,IAAIW,CAAC,CAACX,CAAC,CAAC;IAAEC,CAAC,GAAG,CAAC;EAC7E,IAAIW,CAAC,EAAE,OAAOA,CAAC,CAACJ,IAAI,CAACG,CAAC,CAAC;EACvB,IAAIA,CAAC,IAAI,OAAOA,CAAC,CAACP,MAAM,KAAK,QAAQ,EAAE,OAAO;IAC1Cc,IAAI,EAAE,SAAAA,CAAA,EAAY;MACd,IAAIP,CAAC,IAAIV,CAAC,IAAIU,CAAC,CAACP,MAAM,EAAEO,CAAC,GAAG,KAAK,CAAC;MAClC,OAAO;QAAEU,KAAK,EAAEV,CAAC,IAAIA,CAAC,CAACV,CAAC,EAAE,CAAC;QAAEkB,IAAI,EAAE,CAACR;MAAE,CAAC;IAC3C;EACJ,CAAC;EACD,MAAM,IAAIa,SAAS,CAACxB,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC;AAC1F,CAAC;AACD,IAAIyB,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIzB,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAE4B,CAAC,GAAGF,IAAI,CAACvB,MAAM,EAAEY,EAAE,EAAEf,CAAC,GAAG4B,CAAC,EAAE5B,CAAC,EAAE,EAAE;IACjF,IAAIe,EAAE,IAAI,EAAEf,CAAC,IAAI0B,IAAI,CAAC,EAAE;MACpB,IAAI,CAACX,EAAE,EAAEA,EAAE,GAAGc,KAAK,CAACxB,SAAS,CAACyB,KAAK,CAACvB,IAAI,CAACmB,IAAI,EAAE,CAAC,EAAE1B,CAAC,CAAC;MACpDe,EAAE,CAACf,CAAC,CAAC,GAAG0B,IAAI,CAAC1B,CAAC,CAAC;IACnB;EACJ;EACA,OAAOyB,EAAE,CAACM,MAAM,CAAChB,EAAE,IAAIc,KAAK,CAACxB,SAAS,CAACyB,KAAK,CAACvB,IAAI,CAACmB,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,OAAOM,KAAK,IAAIC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAS,OAAO;AAClH,OAAOC,EAAE,MAAM,qBAAqB;AACpC,SAASC,OAAO,EAAEC,SAAS,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,QAAQ,kBAAkB;AACtE,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,aAAa;AAC3D,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAASC,mBAAmB,EAAEC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,YAAY,QAAS,SAAS;AAC3H,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,KAAK,MAAM,sBAAsB;AACxC;AACA,IAAIC,2BAA2B,GAAG,oBAAoB;AACtD,IAAIC,YAAY,GAAG;EACfC,OAAO,EAAE,OAAO;EAChBC,QAAQ,EAAE,IAAI;EACdC,YAAY,EAAE,IAAI;EAClBC,aAAa,EAAE,IAAI;EACnBC,wBAAwB,EAAE;AAC9B,CAAC;AACD,IAAIC,iBAAiB,GAAG;EAAEC,MAAM,EAAE;AAAE,CAAC;AACrC,SAASC,MAAMA,CAACC,SAAS,EAAEC,GAAG,EAAE;EAC5B,IAAIC,EAAE,GAAG9C,UAAU,CAAC6B,aAAa,CAAC;IAAEkB,YAAY,GAAGD,EAAE,CAACC,YAAY;IAAEC,WAAW,GAAGF,EAAE,CAACE,WAAW;IAAEC,eAAe,GAAGH,EAAE,CAACG,eAAe;IAAEC,GAAG,GAAGJ,EAAE,CAACI,GAAG;EACpJ,IAAIC,KAAK,GAAGnB,aAAa,CAACY,SAAS,EAAET,YAAY,EAAEc,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACN,MAAM,CAAC;EAC5I,IAAIS,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IAAEC,YAAY,GAAGF,KAAK,CAACE,YAAY;IAAEb,wBAAwB,GAAGW,KAAK,CAACX,wBAAwB;IAAEc,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IAAEf,aAAa,GAAGY,KAAK,CAACZ,aAAa;IAAEgB,eAAe,GAAGJ,KAAK,CAACI,eAAe;IAAEC,UAAU,GAAGL,KAAK,CAACK,UAAU;IAAEC,eAAe,GAAGN,KAAK,CAACM,eAAe;IAAEC,OAAO,GAAGP,KAAK,CAACO,OAAO;IAAEpB,YAAY,GAAGa,KAAK,CAACb,YAAY;IAAEqB,YAAY,GAAGR,KAAK,CAACQ,YAAY;IAAEC,iBAAiB,GAAGT,KAAK,CAACS,iBAAiB;IAAExB,OAAO,GAAGe,KAAK,CAACf,OAAO;IAAEyB,cAAc,GAAGV,KAAK,CAACU,cAAc;IAAEC,YAAY,GAAGX,KAAK,CAACW,YAAY;IAAEC,cAAc,GAAGZ,KAAK,CAACY,cAAc;IAAEC,iBAAiB,GAAGb,KAAK,CAACa,iBAAiB;IAAEC,qBAAqB,GAAGd,KAAK,CAACc,qBAAqB;IAAEC,gBAAgB,GAAGf,KAAK,CAACe,gBAAgB;IAC/sB;IACAC,QAAQ,GAAGhB,KAAK,CAACgB,QAAQ;IAAEC,QAAQ,GAAGjB,KAAK,CAACiB,QAAQ;IAAEC,UAAU,GAAGlB,KAAK,CAACkB,UAAU;IAAEC,OAAO,GAAGnB,KAAK,CAACmB,OAAO;IAAEC,QAAQ,GAAGpB,KAAK,CAACoB,QAAQ;IAAEC,OAAO,GAAGrB,KAAK,CAACqB,OAAO;IAAEC,MAAM,GAAGtB,KAAK,CAACsB,MAAM;IAAEC,aAAa,GAAGvB,KAAK,CAACuB,aAAa;IAAEC,eAAe,GAAGxB,KAAK,CAACwB,eAAe;IAAEC,kBAAkB,GAAGzB,KAAK,CAACyB,kBAAkB;IAAEC,OAAO,GAAG1B,KAAK,CAAC0B,OAAO;IAAEC,SAAS,GAAG3B,KAAK,CAAC2B,SAAS;EAC1W;EACA,IAAIC,IAAI,GAAG5B,KAAK,CAAC4B,IAAI;IAAEC,WAAW,GAAG7B,KAAK,CAAC6B,WAAW;EACtD,IAAID,IAAI,KAAK,MAAM,EAAE;IACjBA,IAAI,GAAG,UAAU;IACjBC,WAAW,GAAG,IAAI;IAClB5D,OAAO,CAAC,IAAI,EAAE,sIAAsI,CAAC;EACzJ;EACA,IAAI6D,SAAS,GAAGlC,YAAY,CAAC,QAAQ,CAAC;EACtC,IAAImC,cAAc,GAAGH,IAAI,KAAK,UAAU;EACxC;EACA,IAAII,EAAE,GAAG5G,MAAM,CAAC8B,QAAQ,CAACoB,aAAa,CAAC0B,KAAK,CAACiC,YAAY,EAAEF,cAAc,EAAEvB,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;IAAE0B,UAAU,GAAGF,EAAE,CAAC,CAAC,CAAC;IAAEG,QAAQ,GAAGH,EAAE,CAAC,CAAC,CAAC;EACnI,IAAIjG,KAAK,GAAG,OAAO,IAAIiE,KAAK,GAAG1B,aAAa,CAAC0B,KAAK,CAACjE,KAAK,EAAEgG,cAAc,EAAEvB,YAAY,CAAC,GAAG0B,UAAU;EACpG,IAAIE,EAAE,GAAGhH,MAAM,CAACuD,aAAa,CAAC,EAAE,EAAE;MAC9B5C,KAAK,EAAE,YAAY,IAAIiE,KAAK,GAAGA,KAAK,CAACqC,UAAU,IAAI,EAAE,GAAGC;IAC5D,CAAC,CAAC,EAAE,CAAC,CAAC;IAAED,UAAU,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEG,aAAa,GAAGH,EAAE,CAAC,CAAC,CAAC;IAAEI,eAAe,GAAGJ,EAAE,CAAC,CAAC,CAAC;EAC1E,IAAIK,EAAE,GAAGrH,MAAM,CAACuD,aAAa,CAAC,KAAK,EAAE;MACjCsD,YAAY,EAAEjC,KAAK,CAAC0C,mBAAmB;MACvC3G,KAAK,EAAE,cAAc,IAAIiE,KAAK,GACxBA,KAAK,CAAC2C,YAAY,GAClBhC,YAAY,IAAI,cAAc,IAAIA,YAAY,GAC1CA,YAAY,CAACgC,YAAY,GACzBL;IACd,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEK,YAAY,GAAGF,EAAE,CAAC,CAAC,CAAC;IAAEG,eAAe,GAAGH,EAAE,CAAC,CAAC,CAAC;EACrD;EACA,IAAII,EAAE,GAAGzH,MAAM,CAAC8B,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAE4F,kBAAkB,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,qBAAqB,GAAGF,EAAE,CAAC,CAAC,CAAC;EAC7F;EACA,IAAIG,EAAE,GAAG5H,MAAM,CAAC8B,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE+F,kBAAkB,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,qBAAqB,GAAGF,EAAE,CAAC,CAAC,CAAC;EAC3F;EACA,IAAIG,EAAE,GAAG/H,MAAM,CAAC8B,QAAQ,CAACW,OAAO,CAAC9B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,EAAE,CAAC,CAAC;IAAEqH,WAAW,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,cAAc,GAAGF,EAAE,CAAC,CAAC,CAAC;EAC5G;EACA,IAAIG,EAAE,GAAGtG,OAAO,CAAC,YAAY;MACzB,OAAOyB,YAAY,CAAC;QAAEwB,QAAQ,EAAEA,QAAQ;QAAEM,OAAO,EAAEA,OAAO;QAAEpB,YAAY,EAAEA;MAAa,CAAC,EAAE;QACtF2C,SAAS,EAAEA,SAAS;QACpBO,UAAU,EAAEA,UAAU;QACtBY,kBAAkB,EAAEA,kBAAkB;QACtCH,kBAAkB,EAAEA;MACxB,CAAC,CAAC;IACN,CAAC,EAAE,CAAC7C,QAAQ,EAAEM,OAAO,EAAEpB,YAAY,EAAEkD,UAAU,EAAES,kBAAkB,EAAEG,kBAAkB,CAAC,CAAC;IAAEM,YAAY,GAAGD,EAAE,CAACC,YAAY;IAAEC,aAAa,GAAGF,EAAE,CAACE,aAAa;IAAEC,eAAe,GAAGH,EAAE,CAACG,eAAe;IAAEC,0BAA0B,GAAGJ,EAAE,CAACI,0BAA0B;IAAEC,WAAW,GAAGL,EAAE,CAACK,WAAW;IAAEC,wBAAwB,GAAGN,EAAE,CAACM,wBAAwB;EACnV;EACA,IAAIC,UAAU,GAAG5G,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAI6G,UAAU,GAAG7G,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAI8G,aAAa,GAAG9G,MAAM,CAAC,IAAI,CAAC;EAChC;EACA,IAAI+G,WAAW,GAAG/G,MAAM,CAAC,EAAE,CAAC;EAC5B;EACA,IAAIgH,yBAAyB,GAAGhH,MAAM,CAAC,IAAI,CAAC;EAC5C;EACA,IAAIiH,6BAA6B,GAAGjH,MAAM,CAACoF,UAAU,CAAC;EACtD;EACA,IAAI8B,8BAA8B,GAAGlH,MAAM,CAAC,IAAI,CAAC;EACjD;EACA,IAAImH,0BAA0B,GAAGnH,MAAM,CAAC,CAAC,CAAC;EAC1C;EACA,IAAIoH,eAAe,GAAGpH,MAAM,CAAC,KAAK,CAAC;EACnC;EACA,IAAIqH,eAAe,GAAGxF,KAAK,CAACgD,SAAS,GAAG,SAAS,CAAC;EAClD,IAAIyC,kBAAkB,GAAGlG,YAAY,CAACtC,KAAK,EAAEgG,cAAc,CAAC;EAC5D,IAAIyC,kBAAkB,GAAGxH,OAAO,CAAC,YAAY;IACzC,IAAI2C,EAAE,EAAEqC,EAAE;IACV,IAAI3C,wBAAwB,EAAE;MAC1B,IAAIoF,UAAU,GAAG5G,OAAO,CAAC9B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK;MAClD;MACA;MACA,IAAI2I,4BAA4B,GAAG,CAACH,kBAAkB,KAAK,CAAC5E,EAAE,GAAG6D,aAAa,CAACmB,GAAG,CAACF,UAAU,CAAC,MAAM,IAAI,IAAI9E,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACiF,MAAM,CAAC;MAC/I;MACA,IAAIC,qBAAqB,GAAG,CAAC,CAAC7C,EAAE,GAAGwB,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACmB,GAAG,CAAClB,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIzB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC8C,OAAO,MAAM/F,2BAA2B;MACxN,OAAO2F,4BAA4B,IAAI,CAACG,qBAAqB,GACvDJ,UAAU,GACVhB,eAAe,CAACC,0BAA0B,CAAC,CAAC,CAAC,CAAC;IACxD;IACA,OAAOpB,SAAS;EACpB,CAAC,EAAE,CACCvG,KAAK,EACLyH,aAAa,EACbC,eAAe,EACfC,0BAA0B,EAC1BrE,wBAAwB,EACxBkF,kBAAkB,CACrB,CAAC;EACF,IAAIQ,cAAc,GAAGnI,WAAW,CAAC,UAAUoI,WAAW,EAAEzE,OAAO,EAAE;IAC7D,IAAIZ,EAAE;IACN,IAAIsF,YAAY,GAAGzB,aAAa,CAACmB,GAAG,CAACK,WAAW,CAAC;IACjD,IAAInB,UAAU,CAACqB,OAAO,KAAK,CAACvF,EAAE,GAAGsF,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACE,KAAK,MAAM,IAAI,IAAIxF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,KAAK,CAAC,EAAE;MAC7J6D,UAAU,CAACqB,OAAO,CAACE,QAAQ,CAAC;QAAEC,GAAG,EAAEJ,YAAY,CAACE,KAAK,CAACnF,KAAK,CAACsF,IAAI;QAAE/E,OAAO,EAAEA;MAAQ,CAAC,CAAC;IACzF;EACJ,CAAC,EAAE,CAACiD,aAAa,CAAC,CAAC;EACnB,IAAI+B,0BAA0B,GAAG3I,WAAW,CAAC,UAAUyF,UAAU,EAAEmD,QAAQ,EAAE;IACzE,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;MAAEA,QAAQ,GAAG,KAAK;IAAE;IAC7C,OAAOzH,QAAQ,CAAC8D,WAAW,CAAC,IAAI,QAAQA,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAAC4D,SAAS,CAAC,KAAK,UAAU,GACjI5D,WAAW,CAAC4D,SAAS,CAACpD,UAAU,EAAEmD,QAAQ,CAAC,GAC3CnD,UAAU;EACpB,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EACjB;EACA,IAAI6D,mBAAmB,GAAG,SAAAA,CAAU3J,KAAK,EAAE4J,MAAM,EAAE;IAC/C,IAAI5J,KAAK,KAAKmI,6BAA6B,CAACgB,OAAO,IAC/CS,MAAM,KAAKxB,8BAA8B,CAACe,OAAO,EAAE;MACnD3C,aAAa,CAACxG,KAAK,CAAC;MACpBmI,6BAA6B,CAACgB,OAAO,GAAGnJ,KAAK;MAC7CoI,8BAA8B,CAACe,OAAO,GAAGS,MAAM;MAC/ClE,kBAAkB,IAAIA,kBAAkB,CAAC1F,KAAK,EAAE4J,MAAM,CAAC;IAC3D;EACJ,CAAC;EACD;EACA,IAAIC,qBAAqB,GAAG,SAAAA,CAAU7J,KAAK,EAAE;IACzC,IAAI4G,YAAY,KAAK5G,KAAK,EAAE;MACxB6G,eAAe,CAAC7G,KAAK,CAAC;MACtByF,eAAe,IAAIA,eAAe,CAACzF,KAAK,CAAC;MACzC4E,YAAY,IAAIA,YAAY,CAACa,eAAe,IAAIb,YAAY,CAACa,eAAe,CAACzF,KAAK,CAAC;IACvF;EACJ,CAAC;EACD;EACAe,SAAS,CAAC,YAAY;IAClB,IAAIiF,cAAc,EAAE;MAChB,IAAI,CAACvF,KAAK,CAACqB,OAAO,CAAC9B,KAAK,CAAC,EAAE;QACvBoG,QAAQ,CAACpG,KAAK,KAAKuG,SAAS,GAAG,EAAE,GAAG,CAACvG,KAAK,CAAC,CAAC;MAChD;IACJ,CAAC,MACI,IAAIS,KAAK,CAACqB,OAAO,CAAC9B,KAAK,CAAC,EAAE;MAC3BoG,QAAQ,CAACpG,KAAK,CAACjB,MAAM,KAAK,CAAC,GAAGwH,SAAS,GAAGvG,KAAK,CAAC,CAAC,CAAC,CAAC;IACvD;EACJ,CAAC,EAAE,CAACgG,cAAc,EAAEhG,KAAK,CAAC,CAAC;EAC3B;EACAe,SAAS,CAAC,YAAY;IAClB,IAAI6F,YAAY,EAAE;MACd;MACAU,cAAc,CAACmB,kBAAkB,CAAC;MAClC;MACA,IAAIqB,YAAY,GAAGhI,OAAO,CAAC9B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK;MACpD,IAAI,CAACwI,kBAAkB,IAAIf,aAAa,CAACsC,GAAG,CAACD,YAAY,CAAC,EAAE;QACxDE,UAAU,CAAC,YAAY;UAAE,OAAOhB,cAAc,CAACc,YAAY,CAAC;QAAE,CAAC,CAAC;MACpE;IACJ;EACJ,CAAC,EAAE,CAAClD,YAAY,CAAC,CAAC;EAClB;EACA7F,SAAS,CAAC,YAAY;IAClB,IAAImH,yBAAyB,CAACiB,OAAO,KAAK,IAAI,IAC1CjB,yBAAyB,CAACiB,OAAO,KAAK,MAAM,EAAE;MAC9CH,cAAc,CAAC3B,WAAW,CAAC;MAC3Ba,yBAAyB,CAACiB,OAAO,GAAG,MAAM;IAC9C;EACJ,CAAC,EAAE,CAAC9B,WAAW,CAAC,CAAC;EACjB;EACAtG,SAAS,CAAC,YAAY;IAClBuG,cAAc,CAACmB,kBAAkB,CAAC;EACtC,CAAC,EAAE,CAACwB,IAAI,CAACC,SAAS,CAAC1C,YAAY,CAAC2C,GAAG,CAAC,UAAUf,KAAK,EAAE;IAAE,IAAIxF,EAAE;IAAE,OAAO,CAACA,EAAE,GAAGwF,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACnF,KAAK,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC5D,KAAK;EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3L;EACAe,SAAS,CAAC,YAAY;IAClBkH,WAAW,CAACkB,OAAO,GAAGlB,WAAW,CAACkB,OAAO,CAACiB,MAAM,CAAC,UAAUC,CAAC,EAAE;MAC1D,OAAOrE,cAAc,GACflE,OAAO,CAAC9B,KAAK,CAAC,IAAIA,KAAK,CAACsK,OAAO,CAACD,CAAC,CAACrK,KAAK,CAAC,GAAG,CAAC,CAAC,GAC7CqK,CAAC,CAACrK,KAAK,KAAKA,KAAK;IAC3B,CAAC,CAAC;EACN,CAAC,EAAE,CAACA,KAAK,EAAEgG,cAAc,CAAC,CAAC;EAC3B;EACAjF,SAAS,CAAC,YAAY;IAClB,IAAI+E,WAAW,EAAE;MACb,IAAIyE,sBAAsB,GAAG,KAAK,CAAC;MACnC,IAAIjI,YAAY,CAACtC,KAAK,EAAEgG,cAAc,CAAC,EAAE;QACrCuE,sBAAsB,GAAG,EAAE;MAC/B,CAAC,MACI;QACD;QACA,IAAIC,kBAAkB,GAAG/J,KAAK,CAACqB,OAAO,CAAC9B,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;QAC/D;QACA,IAAIyK,qBAAqB,GAAGD,kBAAkB,CACzCJ,MAAM,CAAC,UAAUM,CAAC,EAAE;UACrB,IAAI9G,EAAE;UACN,IAAI+G,MAAM,GAAGlD,aAAa,CAACmB,GAAG,CAAC8B,CAAC,CAAC,KAAK,CAAC9G,EAAE,GAAGqE,WAAW,CAACkB,OAAO,CAACyB,IAAI,CAAC,UAAUC,IAAI,EAAE;YAAE,OAAOA,IAAI,CAAC7K,KAAK,KAAK0K,CAAC;UAAE,CAAC,CAAC,MAAM,IAAI,IAAI9G,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+G,MAAM,CAAC;UACnK,OAAO,CAACA,MAAM,IAAIA,MAAM,CAAC5B,OAAO,KAAK/F,2BAA2B;QACpE,CAAC,CAAC,CACGmH,GAAG,CAAC,UAAUW,EAAE,EAAE;UAAE,OAAOtB,0BAA0B,CAACsB,EAAE,CAAC;QAAE,CAAC,CAAC;QAClE;QACA,IAAIC,uBAAuB,GAAG7D,kBAAkB,CAACkD,MAAM,CAAC,UAAUU,EAAE,EAAE;UAClE,IAAIE,OAAO,GAAGhJ,QAAQ,CAAC8I,EAAE,CAAC,GAAGA,EAAE,CAAC9K,KAAK,GAAG8K,EAAE;UAC1C,OAAON,kBAAkB,CAACF,OAAO,CAACU,OAAO,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC,CAAC;QACFT,sBAAsB,GAAGQ,uBAAuB,CAACpK,MAAM,CAAC8J,qBAAqB,CAAC;MAClF;MACA,IAAIQ,qBAAqB,GAAG,SAAAA,CAAUzG,OAAO,EAAE;QAC3C,OAAOA,OAAO,CAAC2F,GAAG,CAAC,UAAUQ,MAAM,EAAE;UAAE,OAAQ3I,QAAQ,CAAC2I,MAAM,CAAC,GAAGA,MAAM,CAAC3K,KAAK,GAAG2K,MAAM;QAAG,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC;MAC3G,CAAC;MACD;MACA,IAAID,qBAAqB,CAACV,sBAAsB,CAAC,KAAKU,qBAAqB,CAAC/D,kBAAkB,CAAC,EAAE;QAC7FC,qBAAqB,CAACoD,sBAAsB,CAAC;MACjD;IACJ;EACJ,CAAC,EAAE,CAACvK,KAAK,EAAE8F,WAAW,EAAEE,cAAc,EAAEwD,0BAA0B,CAAC,CAAC;EACpE;EACAzI,SAAS,CAAC,YAAY;IAClB,IAAI+E,WAAW,EAAE;MACb;MACAkB,qBAAqB,CAACV,UAAU,IAAI,CAACmB,aAAa,CAACsC,GAAG,CAACzD,UAAU,CAAC,GAC5DkD,0BAA0B,CAAClD,UAAU,EAAE,IAAI,CAAC,GAC5C,IAAI,CAAC;IACf;EACJ,CAAC,EAAE,CAACA,UAAU,EAAEkD,0BAA0B,CAAC,CAAC;EAC5C;EACAzI,SAAS,CAAC,YAAY;IAClB,IAAI6I,MAAM,GAAGxB,8BAA8B,CAACe,OAAO;IACnD,IAAI1C,eAAe,KAAKH,UAAU,KAAKsD,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,gBAAgB,CAAC,EAAE;MACxFvE,QAAQ,IAAIA,QAAQ,CAACiB,UAAU,EAAEsD,MAAM,CAAC;IAC5C;EACJ,CAAC,EAAE,CAACtD,UAAU,CAAC,CAAC;EAChB,IAAI6E,oBAAoB,GAAGtK,WAAW,CAAC,UAAUb,KAAK,EAAE;IACpD,IAAI2K,MAAM,GAAGlD,aAAa,CAACmB,GAAG,CAAC5I,KAAK,CAAC;IACrC,IAAI2K,MAAM,EAAE;MACR,IAAIS,KAAK,GAAGnD,WAAW,CAACkB,OAAO,CAACkC,SAAS,CAAC,UAAUR,IAAI,EAAE;QAAE,OAAOA,IAAI,CAAC7K,KAAK,KAAKA,KAAK;MAAE,CAAC,CAAC;MAC3F,IAAIoL,KAAK,GAAG,CAAC,CAAC,EAAE;QACZnD,WAAW,CAACkB,OAAO,CAACmC,MAAM,CAACF,KAAK,EAAE,CAAC,EAAE;UAAEpL,KAAK,EAAEA,KAAK;UAAE2K,MAAM,EAAEA;QAAO,CAAC,CAAC;MAC1E,CAAC,MACI;QACD1C,WAAW,CAACkB,OAAO,CAACpJ,IAAI,CAAC;UAAEC,KAAK,EAAEA,KAAK;UAAE2K,MAAM,EAAEA;QAAO,CAAC,CAAC;MAC9D;MACA,OAAOA,MAAM;IACjB;IACA,IAAIE,IAAI,GAAG5C,WAAW,CAACkB,OAAO,CAACyB,IAAI,CAAC,UAAUP,CAAC,EAAE;MAAE,OAAOA,CAAC,CAACrK,KAAK,KAAKA,KAAK;IAAE,CAAC,CAAC;IAC/E,OAAO6K,IAAI,IAAIA,IAAI,CAACF,MAAM;EAC9B,CAAC,EAAE,CAAClD,aAAa,CAAC,CAAC;EACnB;EACA,IAAI8D,cAAc,GAAG,SAAAA,CAAUC,SAAS,EAAE;IACtC,IAAI,CAAC7D,0BAA0B,CAAC5I,MAAM,EAAE;MACpC,OAAOwH,SAAS;IACpB;IACA,IAAIc,WAAW,KAAKd,SAAS,IAAI,CAACkB,aAAa,CAACsC,GAAG,CAAC1C,WAAW,CAAC,EAAE;MAC9D,OAAOK,eAAe,CAACC,0BAA0B,CAAC,CAAC,CAAC,CAAC;IACzD;IACA,IAAIuB,YAAY,GAAGzB,aAAa,CAACmB,GAAG,CAACvB,WAAW,CAAC;IACjD,IAAIoE,WAAW,GAAGvC,YAAY,CAACwC,MAAM;IACrC,IAAIA,MAAM,GAAG/D,0BAA0B,CAAC2C,OAAO,CAACmB,WAAW,CAAC;IAC5D,IAAIE,OAAO,GAAGhE,0BAA0B,CAAC5I,MAAM;IAC/C,OAAO2I,eAAe,CAACC,0BAA0B,CAAC,CAAC,CAAC6D,SAAS,KAAK,IAAI,GAAGE,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC,IAAIC,OAAO,IAAIA,OAAO,CAAC,CAAC;EAC5H,CAAC;EACD;EACA,IAAIC,4BAA4B,GAAG,SAAAA,CAAUzF,UAAU,EAAE0F,OAAO,EAAE;IAC9D,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MAAEA,OAAO,GAAGvJ,YAAY,CAAC6D,UAAU,EAAEH,cAAc,CAAC;IAAE;IAC9E,IAAIhG,KAAK,GAAGmG,UAAU;IACtB,IAAIwE,MAAM,GAAGxE,UAAU,KAAKI,SAAS,GAC/BA,SAAS,GACT9F,KAAK,CAACqB,OAAO,CAACqE,UAAU,CAAC,GACrBA,UAAU,CAACgE,GAAG,CAACgB,oBAAoB,CAAC,GACpCA,oBAAoB,CAAChF,UAAU,CAAC;IAC1C,IAAI1B,YAAY,IAAI,CAACoH,OAAO,EAAE;MAC1B,IAAIC,gBAAgB,GAAG,SAAAA,CAAU7C,WAAW,EAAE8C,UAAU,EAAE;QACtD,IAAIC,GAAG,EAAEpI,EAAE;QACX,IAAImI,UAAU,EAAE;UACZ,OAAOA,UAAU,CAAC7H,QAAQ;QAC9B;QACA;QACA;QACA,IAAI+H,SAAS,GAAG,OAAO,IAAIhI,KAAK,GAAGA,KAAK,CAACjE,KAAK,GAAG,cAAc,IAAIiE,KAAK,GAAGA,KAAK,CAACiC,YAAY,GAAG,IAAI;QACpG;QACA,IAAIzF,KAAK,CAACqB,OAAO,CAACmK,SAAS,CAAC,EAAE;UAC1B,IAAI;YACA,KAAK,IAAIC,WAAW,GAAGhM,QAAQ,CAAC+L,SAAS,CAAC,EAAEE,aAAa,GAAGD,WAAW,CAACrM,IAAI,CAAC,CAAC,EAAE,CAACsM,aAAa,CAACrM,IAAI,EAAEqM,aAAa,GAAGD,WAAW,CAACrM,IAAI,CAAC,CAAC,EAAE;cACrI,IAAIgL,IAAI,GAAGsB,aAAa,CAACnM,KAAK;cAC9B,IAAIgC,QAAQ,CAAC6I,IAAI,CAAC,IAAIA,IAAI,CAAC7K,KAAK,KAAKiJ,WAAW,EAAE;gBAC9C,OAAO4B,IAAI,CAACuB,KAAK;cACrB;YACJ;UACJ,CAAC,CACD,OAAOC,KAAK,EAAE;YAAEL,GAAG,GAAG;cAAE/L,KAAK,EAAEoM;YAAM,CAAC;UAAE,CAAC,SACjC;YACJ,IAAI;cACA,IAAIF,aAAa,IAAI,CAACA,aAAa,CAACrM,IAAI,KAAK8D,EAAE,GAAGsI,WAAW,CAACI,MAAM,CAAC,EAAE1I,EAAE,CAACzE,IAAI,CAAC+M,WAAW,CAAC;YAC/F,CAAC,SACO;cAAE,IAAIF,GAAG,EAAE,MAAMA,GAAG,CAAC/L,KAAK;YAAE;UACxC;QACJ;QACA;QAAA,KACK,IAAI+B,QAAQ,CAACiK,SAAS,CAAC,IAAIA,SAAS,CAACjM,KAAK,KAAKiJ,WAAW,EAAE;UAC7D,OAAOgD,SAAS,CAACG,KAAK;QAC1B;MACJ,CAAC;MACD,IAAI3L,KAAK,CAACqB,OAAO,CAACqE,UAAU,CAAC,EAAE;QAC3BnG,KAAK,GAAGmG,UAAU,CAACgE,GAAG,CAAC,UAAUlB,WAAW,EAAEmC,KAAK,EAAE;UAAE,OAAQ;YAC3DpL,KAAK,EAAEiJ,WAAW;YAClBmD,KAAK,EAAEN,gBAAgB,CAAC7C,WAAW,EAAE0B,MAAM,CAACS,KAAK,CAAC;UACtD,CAAC;QAAG,CAAC,CAAC;MACV,CAAC,MACI;QACDpL,KAAK,GAAG;UAAEA,KAAK,EAAEmG,UAAU;UAAEiG,KAAK,EAAEN,gBAAgB,CAAC3F,UAAU,EAAEwE,MAAM;QAAE,CAAC;MAC9E;IACJ;IACA,OAAO;MAAEA,MAAM,EAAEA,MAAM;MAAE3K,KAAK,EAAEA;IAAM,CAAC;EAC3C,CAAC;EACD,IAAIuM,oBAAoB,GAAG,SAAAA,CAAUvM,KAAK,EAAE;IACxCoG,QAAQ,CAACpG,KAAK,CAAC;IACf,IAAIiF,QAAQ,EAAE;MACV,IAAIuH,iBAAiB,GAAGZ,4BAA4B,CAAC5L,KAAK,CAAC;MAC3DiF,QAAQ,CAACuH,iBAAiB,CAACxM,KAAK,EAAEwM,iBAAiB,CAAC7B,MAAM,CAAC;IAC/D;EACJ,CAAC;EACD;EACA,IAAI8B,WAAW,GAAG,SAAAA,CAAUxD,WAAW,EAAEyD,SAAS,EAAE;IAChD;IACA,IAAIA,SAAS,KAAK,QAAQ,IAAKA,SAAS,KAAK,KAAK,IAAIjF,aAAa,CAACmB,GAAG,CAACK,WAAW,CAAE,EAAE;MACnF,IAAI0D,QAAQ,GAAGD,SAAS,KAAK,KAAK,GAC5B1M,KAAK,CAACW,MAAM,CAACsI,WAAW,CAAC,GACzBjJ,KAAK,CAACoK,MAAM,CAAC,UAAUM,CAAC,EAAE;QAAE,OAAOA,CAAC,KAAKzB,WAAW;MAAE,CAAC,CAAC;MAC9D,IAAI2D,iBAAiB,GAAGF,SAAS,KAAK,KAAK,GAAGxH,QAAQ,GAAGC,UAAU;MACnEoH,oBAAoB,CAACI,QAAQ,CAAC;MAC9B,IAAI,OAAOC,iBAAiB,KAAK,UAAU,EAAE;QACzC,IAAIJ,iBAAiB,GAAGZ,4BAA4B,CAAC3C,WAAW,EAAE,KAAK,CAAC;QACxE2D,iBAAiB,CAACJ,iBAAiB,CAACxM,KAAK,EAAEwM,iBAAiB,CAAC7B,MAAM,CAAC;MACxE;IACJ;EACJ,CAAC;EACD,IAAIkC,iBAAiB,GAAG,SAAAA,CAAU5D,WAAW,EAAE7E,QAAQ,EAAE;IACrD,IAAIA,QAAQ,EAAE;MACV;IACJ;IACA,IAAI4B,cAAc,EAAE;MAChByG,WAAW,CAACxD,WAAW,EAAEjJ,KAAK,CAACsK,OAAO,CAACrB,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,QAAQ,CAAC;MAC9E;MACA,IAAI,CAACjH,QAAQ,CAACsC,UAAU,CAAC,IAAI,CAACA,UAAU,CAACwI,2BAA2B,EAAE;QAClEnD,mBAAmB,CAAC,EAAE,EAAE,eAAe,CAAC;MAC5C;IACJ,CAAC,MACI;MACD,IAAIV,WAAW,KAAKjJ,KAAK,EAAE;QACvBuM,oBAAoB,CAACtD,WAAW,CAAC;MACrC;MACAe,UAAU,CAAC,YAAY;QACnBH,qBAAqB,CAAC,KAAK,CAAC;MAChC,CAAC,CAAC;IACN;EACJ,CAAC;EACD;EACA,IAAIkD,aAAa,GAAG9K,gBAAgB,CAAC,IAAI+K,GAAG,CAAC,CACzC,CAACxL,GAAG,CAACyL,IAAI,EAAE,YAAY;IAAE,OAAOpD,qBAAqB,CAAC,KAAK,CAAC;EAAE,CAAC,CAAC,EAChE,CACItI,KAAK,CAAC0L,IAAI,EACV,YAAY;IACR,IAAIrG,YAAY,EAAE;MACd,IAAI+D,MAAM,GAAGlD,aAAa,CAACmB,GAAG,CAACvB,WAAW,CAAC;MAC3CsD,MAAM,IAAIkC,iBAAiB,CAACxF,WAAW,EAAEsD,MAAM,CAACvG,QAAQ,CAAC;IAC7D,CAAC,MACI;MACDyF,qBAAqB,CAAC,IAAI,CAAC;IAC/B;EACJ,CAAC,CACJ,EACD,CACIpI,GAAG,CAACwL,IAAI;EACR;EACA,YAAY;IAAE,OAAOpD,qBAAqB,CAAC,KAAK,CAAC;EAAE,CAAC,CACvD,EACD,CACIxI,OAAO,CAAC4L,IAAI,EACZ,YAAY;IACR,IAAIrG,YAAY,EAAE;MACdsB,yBAAyB,CAACiB,OAAO,GAAG,IAAI;MACxC7B,cAAc,CAACiE,cAAc,CAAC,IAAI,CAAC,CAAC;MACpC,OAAO,KAAK;IAChB;EACJ,CAAC,CACJ,EACD,CACIjK,SAAS,CAAC2L,IAAI,EACd,YAAY;IACR,IAAIrG,YAAY,EAAE;MACdsB,yBAAyB,CAACiB,OAAO,GAAG,MAAM;MAC1C7B,cAAc,CAACiE,cAAc,CAAC,MAAM,CAAC,CAAC;MACtC,OAAO,KAAK;IAChB;EACJ,CAAC,CACJ,CACJ,CAAC,CAAC;EACH,IAAI2B,WAAW,GAAG,SAAAA,CAAA,EAAY;IAC1B,IAAItJ,EAAE;IACN,IAAIqC,EAAE,EAAEI,EAAE;IACV;IACA,IAAI8G,sBAAsB,GAAG,CAACvI,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACwI,mBAAmB,MAAM,KAAK,KAChI,EAAE,CAACnH,EAAE,GAAGrB,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACyI,KAAK,MAAM,IAAI,IAAIpH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqH,KAAK,CAAC,IAAI,CAAC,CAACjH,EAAE,GAAGzB,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACyI,KAAK,MAAM,IAAI,IAAIhH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACiH,KAAK,MAAM,MAAM,CAAC;IAChS;IACA,IAAIC,iBAAiB,GAAGJ,sBAAsB,IAAItF,wBAAwB;IAC1E,IAAI2F,qBAAqB,GAAG,iBAAiB,IAAIvJ,KAAK,GAAGI,eAAe,GAAGP,WAAW,CAAC,QAAQ,CAAC;IAChG;IACA,IAAI2J,aAAa,GAAGjG,YAAY,CAACzI,MAAM,GAAI6B,KAAK,CAAC8M,aAAa,CAACtL,WAAW,EAAE7D,QAAQ,CAAC;MAAEoP,EAAE,EAAEpF,eAAe;MAAEqF,IAAI,EAAE,SAAS;MAAEP,KAAK,EAAEvI,iBAAiB;MAAE+I,SAAS,EAAEzM,EAAE,CAAC2E,SAAS,GAAG,cAAc,EAAEhB,qBAAqB,CAAC;MAAEpB,GAAG,EAAEmE,UAAU;MAAEgG,IAAI,EAAEtG,YAAY;MAAEuG,MAAM,EAAE,IAAI;MAAEC,kBAAkB,EAAE,CAACpG,WAAW;MAAEqG,kBAAkB,EAAEd,sBAAsB;MAAEe,OAAO,EAAE,SAAAA,CAAU9E,KAAK,EAAE;QAAE,OAAOA,KAAK,CAACnF,KAAK,CAACsF,IAAI;MAAE,CAAC;MAAE4E,WAAW,EAAE9L,mBAAmB;MAAE+L,WAAW,EAAE,SAAAA,CAAA,EAAY;QACrclG,yBAAyB,CAACiB,OAAO,GAAG,IAAI;MAC5C,CAAC;MAAEkF,QAAQ,EAAE,SAAAA,CAAUzO,CAAC,EAAE;QAAE,OAAO4F,aAAa,IAAIA,aAAa,CAAC5F,CAAC,CAAC0O,MAAM,CAAC;MAAE;IAAE,CAAC,EAAEtJ,gBAAgB,EAAE;MAAEuJ,SAAS,EAAEhB,iBAAiB,GAAG,IAAI,GAAGvI,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACuJ;IAAU,CAAC,CAAC,EAAE,UAAUnF,KAAK,EAAE;MAChQ,IAAIxF,EAAE;MACN,IAAInB,gBAAgB,CAAC2G,KAAK,CAAC,EAAE;QACzB,OAAOxI,KAAK,CAAC8M,aAAa,CAACtE,KAAK,CAACoF,IAAI,EAAEjQ,QAAQ,CAAC,CAAC,CAAC,EAAE6K,KAAK,CAACnF,KAAK,EAAE;UAAE8B,SAAS,EAAEA;QAAU,CAAC,CAAC,CAAC;MAC/F;MACA,IAAIvD,cAAc,CAAC4G,KAAK,CAAC,EAAE;QACvB,IAAIH,WAAW,GAAG,CAACrF,EAAE,GAAGwF,KAAK,CAACnF,KAAK,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC5D,KAAK;QAClF,IAAIyO,uBAAuB,GAAGzM,QAAQ,CAAC+E,kBAAkB,CAAC,GACpDA,kBAAkB,CAAC/G,KAAK,GACxB+G,kBAAkB;QACxB,IAAI2H,uBAAuB,GAAGxH,kBAAkB,CAACiD,GAAG,CAAC,UAAUW,EAAE,EAAE;UAC/D,OAAO9I,QAAQ,CAAC8I,EAAE,CAAC,GAAGA,EAAE,CAAC9K,KAAK,GAAG8K,EAAE;QACvC,CAAC,CAAC;QACF,IAAI6D,WAAW,GAAG;UACd5I,SAAS,EAAEA,SAAS;UACpB/B,GAAG,EAAEA,GAAG;UACR4K,YAAY,EAAEvH,WAAW;UACzBwH,YAAY,EAAE7O,KAAK;UACnB8O,eAAe,EAAE9I,cAAc;UAC/B+I,qBAAqB,EAAEjJ,WAAW,IAAI2I,uBAAuB,KAAKxF,WAAW;UAC7E+F,oBAAoB,EAAElJ,WAAW,IAAI4I,uBAAuB,CAACpE,OAAO,CAACrB,WAAW,CAAC,GAAG,CAAC,CAAC;UACtFgG,QAAQ,EAAEpC,iBAAiB;UAC3BqC,aAAa,EAAE,SAAAA,CAAUlP,KAAK,EAAE;YAC5BkI,yBAAyB,CAACiB,OAAO,KAAK,IAAI,IAAI7B,cAAc,CAACtH,KAAK,CAAC;UACvE,CAAC;UACDmP,aAAa,EAAE,SAAAA,CAAA,EAAY;YACvBjH,yBAAyB,CAACiB,OAAO,KAAK,IAAI,IAAI7B,cAAc,CAACf,SAAS,CAAC;UAC3E;QACJ,CAAC;QACD,OAAO6C,KAAK,IAAIxI,KAAK,CAAC8M,aAAa,CAACtE,KAAK,CAACoF,IAAI,EAAEjQ,QAAQ,CAAC,CAAC,CAAC,EAAE6K,KAAK,CAACnF,KAAK,EAAE0K,WAAW,CAAC,CAAC;MAC3F;MACA,OAAOvF,KAAK;IAChB,CAAC,CAAC,GAAI,IAAI;IACV;IACA,IAAIgG,cAAc,GAAGtJ,WAAW,IAAIQ,UAAU;IAC9C;IACA,IAAI+I,sBAAsB,GAAG7B,qBAAqB,IAAI,CAAC4B,cAAc,GAAIxO,KAAK,CAAC8M,aAAa,CAAC,KAAK,EAAE;MAAEL,KAAK,EAAEvI,iBAAiB;MAAE+I,SAAS,EAAEzM,EAAE,CAAC2E,SAAS,GAAG,cAAc,EAAEhB,qBAAqB;IAAE,CAAC,EAAEyI,qBAAqB,CAAC,GAAI,IAAI;IAClO,OAAQ5M,KAAK,CAAC8M,aAAa,CAAC,KAAK,EAAE;MAAEG,SAAS,EAAEzM,EAAE,CAAC2E,SAAS,GAAG,QAAQ,GAAGnC,EAAE,GAAG,CAAC,CAAC,EACzEA,EAAE,CAACmC,SAAS,GAAG,eAAe,CAAC,GAAG0H,aAAa,KAAK,IAAI,IAAI4B,sBAAsB,KAAK,IAAI,EAC3FzL,EAAE,CAACmC,SAAS,GAAG,iBAAiB,CAAC,GAAGC,cAAc,EAClDpC,EAAE,CAAC,CAAC;MACR;MACA0L,QAAQ,EAAE,CAAC,CAAC;MAAE1J,SAAS,EAAE,SAAAA,CAAUhG,CAAC,EAAE;QAAE,OAAOmN,aAAa,CAACnN,CAAC,CAAC;MAAE;IAAE,CAAC,EAAE,OAAOiF,cAAc,KAAK,UAAU,GACxGA,cAAc,CAAC4I,aAAa,IAAI4B,sBAAsB,CAAC,GACvD5B,aAAa,IAAI4B,sBAAsB,CAAC;EAClD,CAAC;EACD,IAAIE,qBAAqB,GAAG,SAAAA,CAAUC,GAAG,EAAE;IACvC;IACA;IACAnH,0BAA0B,CAACc,OAAO,GAAG,IAAI;IACzC,IAAInD,cAAc,IAAIlE,OAAO,CAACyC,eAAe,CAAC,IAAIA,eAAe,CAACxF,MAAM,EAAE;MACtE,IAAI0Q,WAAW,GAAGD,GAAG,CAACE,KAAK,CAAC,IAAIC,MAAM,CAAC,GAAG,GAAGpL,eAAe,CAACqL,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;MAC7E;MACA,IAAIH,WAAW,CAAC1Q,MAAM,GAAG,CAAC,EAAE;QACxB;QACAsJ,0BAA0B,CAACc,OAAO,GAAG0G,IAAI,CAACC,GAAG,CAAC,CAAC;QAC/C,IAAIC,WAAW,GAAGN,WAAW,CAACrF,MAAM,CAAC,UAAUM,CAAC,EAAEU,KAAK,EAAE;UAAE,OAAOV,CAAC,IAAI+E,WAAW,CAACnF,OAAO,CAACI,CAAC,CAAC,KAAKU,KAAK;QAAE,CAAC,CAAC;QAC3G,IAAI4E,UAAU,GAAGhQ,KAAK,CAACU,KAAK,CAAC,CAAC,CAAC;QAC/B,IAAIuP,YAAY,GAAG,KAAK;QACxBF,WAAW,CAACG,OAAO,CAAC,UAAUxF,CAAC,EAAE;UAC7B,IAAIsF,UAAU,CAAC1F,OAAO,CAACI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK5E,WAAW,IAAI2B,aAAa,CAACmB,GAAG,CAAC8B,CAAC,CAAC,CAAC,EAAE;YACvEsF,UAAU,CAACjQ,IAAI,CAAC2K,CAAC,CAAC;YAClBuF,YAAY,GAAG,IAAI;UACvB;QACJ,CAAC,CAAC;QACF,IAAIA,YAAY,EAAE;UACd1D,oBAAoB,CAACyD,UAAU,CAAC;QACpC;MACJ;IACJ;IACA,OAAO,CAAC,CAAC3H,0BAA0B,CAACc,OAAO;EAC/C,CAAC;EACD;EACA,IAAIgH,uBAAuB,GAAG;IAC1B7K,OAAO,EAAEA,OAAO;IAChBC,MAAM,EAAE,SAAAA,CAAU6K,KAAK,EAAE;MACrB7K,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC6K,KAAK,CAAC;MAC7D;MACA,CAACxJ,YAAY,IAAI,CAAC0B,eAAe,CAACa,OAAO,IAAIQ,mBAAmB,CAAC,EAAE,EAAE,gBAAgB,CAAC;IAC1F,CAAC;IACD/D,SAAS,EAAE,SAAAA,CAAUwK,KAAK,EAAE;MACxB;MACA,IAAIA,KAAK,CAAC9B,MAAM,CAAC+B,OAAO,KAAK,OAAO,IAAID,KAAK,CAAC9B,MAAM,CAACtO,KAAK,EAAE;QACxD,IAAIsQ,KAAK,GAAGF,KAAK,CAAC9G,GAAG,KAAK7H,GAAG,CAAC6H,GAAG;QACjC,IAAIiH,OAAO,GAAGH,KAAK,CAAC9G,GAAG,KAAK/H,KAAK,CAAC+H,GAAG;QACrC,IAAIiH,OAAO,IAAID,KAAK,EAAE;UAClB,IAAIE,MAAM,GAAGD,OAAO,GAAG,IAAI,GAAGD,KAAK,GAAG,IAAI,GAAG,EAAE;UAC/C,IAAIf,qBAAqB,CAACa,KAAK,CAAC9B,MAAM,CAACtO,KAAK,GAAGwQ,MAAM,CAAC,EAAE;YACpD;YACA7G,mBAAmB,CAAC,EAAE,EAAE,gBAAgB,CAAC;UAC7C;QACJ;MACJ;MACA;MACAoD,aAAa,CAACqD,KAAK,CAAC;MACpBxK,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACwK,KAAK,CAAC;IAC1E,CAAC;IACDK,kBAAkB,EAAE,SAAAA,CAAUzQ,KAAK,EAAE4D,EAAE,EAAE;MACrC,IAAI8M,SAAS,GAAG9M,EAAE,CAAC+M,WAAW,CAACD,SAAS;MACxC;MACA;MACA;MACAA,SAAS,KAAK,iBAAiB,IAAInB,qBAAqB,CAACvP,KAAK,CAAC;MAC/D,IAAIqI,0BAA0B,CAACc,OAAO,EAAE;QACpCQ,mBAAmB,CAAC,EAAE,EAAE,gBAAgB,CAAC;MAC7C,CAAC,MACI;QACDA,mBAAmB,CAAC3J,KAAK,EAAE,QAAQ,CAAC;MACxC;MACA,IAAI,CAAC4G,YAAY,IAAI5G,KAAK,EAAE;QACxB6J,qBAAqB,CAAC,IAAI,CAAC;MAC/B;IACJ,CAAC;IACDlE,OAAO,EAAE,SAAAA,CAAU/F,CAAC,EAAE;MAClB2P,qBAAqB,CAAC3P,CAAC,CAACgR,aAAa,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACtDlL,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC/F,CAAC,CAAC;IAChE,CAAC;IACD;IACAkR,mBAAmB,EAAE,SAAAA,CAAUC,CAAC,EAAE3F,KAAK,EAAEgF,KAAK,EAAE;MAC5CA,KAAK,CAACY,eAAe,CAAC,CAAC;MACvBvE,WAAW,CAACzM,KAAK,CAACoL,KAAK,CAAC,EAAE,QAAQ,CAAC;IACvC,CAAC;IACDhG,OAAO,EAAE,SAAAA,CAAUgL,KAAK,EAAE;MACtBA,KAAK,CAACY,eAAe,CAAC,CAAC;MACvB,IAAIhL,cAAc,EAAE;QAChB;QACA,IAAI2G,QAAQ,GAAG3M,KAAK,CAACoK,MAAM,CAAC,UAAUM,CAAC,EAAE;UACrC,IAAIG,IAAI,GAAGpD,aAAa,CAACmB,GAAG,CAAC8B,CAAC,CAAC;UAC/B,OAAOG,IAAI,IAAIA,IAAI,CAACzG,QAAQ;QAChC,CAAC,CAAC;QACFmI,oBAAoB,CAACI,QAAQ,CAAC;MAClC,CAAC,MACI;QACDJ,oBAAoB,CAAChG,SAAS,CAAC;MACnC;MACAoD,mBAAmB,CAAC,EAAE,EAAE,QAAQ,CAAC;MACjCvE,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACwB,YAAY,CAAC;IAC3E;EACJ,CAAC;EACD5F,mBAAmB,CAAC2C,GAAG,EAAE,YAAY;IACjC,IAAIC,EAAE,EAAEqC,EAAE;IACV,OAAQ;MACJgL,GAAG,EAAE,CAACrN,EAAE,GAAGoE,aAAa,CAACmB,OAAO,MAAM,IAAI,IAAIvF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqN,GAAG;MAC7EC,KAAK,EAAE,SAAAA,CAAA,EAAY;QACflJ,aAAa,CAACmB,OAAO,IAAInB,aAAa,CAACmB,OAAO,CAAC+H,KAAK,CAAC,CAAC;MAC1D,CAAC;MACDC,IAAI,EAAE,SAAAA,CAAA,EAAY;QACdnJ,aAAa,CAACmB,OAAO,IAAInB,aAAa,CAACmB,OAAO,CAACgI,IAAI,CAAC,CAAC;MACzD,CAAC;MACDpE,aAAa,EAAEA,aAAa;MAC5BqE,iBAAiB,EAAE/J,WAAW;MAC9B8D,oBAAoB,EAAEA,oBAAoB;MAC1CkG,iBAAiB,EAAE,SAAAA,CAAA,EAAY;QAAE,OAAOjR,aAAa,CAAC,EAAE,EAAEf,MAAM,CAACoI,aAAa,CAAC6J,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAClH,MAAM,CAAC,UAAUmH,IAAI,EAAE;UAAE,OAAOA,IAAI,CAAC1I,MAAM;QAAE,CAAC,CAAC;MAAE,CAAC;MACnJG,cAAc,EAAEA,cAAc;MAC9BwI,cAAc,EAAE,CAACvL,EAAE,GAAG+B,aAAa,CAACmB,OAAO,MAAM,IAAI,IAAIlD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuL;IACzF,CAAC;EACL,CAAC,EAAE,CAACzE,aAAa,EAAEtF,aAAa,EAAEJ,WAAW,EAAE8D,oBAAoB,EAAEnC,cAAc,CAAC,CAAC;EACrF,IAAIyI,UAAU,GAAG,SAAAA,CAAUC,OAAO,EAAE;IAChC,OAAQ9Q,KAAK,CAAC8M,aAAa,CAAChM,OAAO,EAAEnD,QAAQ,CAAC;MAAEoF,GAAG,EAAE,SAAAA,CAAUA,GAAG,EAAE;QAAE,OAAQoE,UAAU,CAACoB,OAAO,GAAGxF,GAAG;MAAG,CAAC;MAAEgO,KAAK,EAAEzE,WAAW;MAAEhK,OAAO,EAAEA,OAAO;MAAEkB,QAAQ,EAAEA,QAAQ;MAAEM,iBAAiB,EAAEA,iBAAiB;MAAEkN,UAAU,EAAE,oBAAoB;MAAExE,mBAAmB,EAAE,IAAI;MAAEyE,UAAU,EAAEtO,iBAAiB;MAAEqD,YAAY,EAAEA,YAAY;MAAEvD,aAAa,EAAEA,aAAa;MAAEoC,eAAe,EAAEoE,qBAAqB;MAAEiI,QAAQ,EAAE,SAAAA,CAAA,EAAY;QACxZxJ,eAAe,CAACa,OAAO,GAAG,IAAI;MAClC,CAAC;MAAE4I,UAAU,EAAE,SAAAA,CAAA,EAAY;QACvBzJ,eAAe,CAACa,OAAO,GAAG,KAAK;QAC/BQ,mBAAmB,CAAC,EAAE,EAAE,gBAAgB,CAAC;MAC7C;IAAE,CAAC,EAAE9G,IAAI,CAAC+B,YAAY,EAAE,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC,CAAC,EAAE8M,OAAO,CAAC;EAC/E,CAAC;EACD,IAAIM,kBAAkB,GAAG,OAAOrN,cAAc,KAAK,UAAU,GACvDA,cAAc,CAACiH,4BAA4B,CAAC5L,KAAK,CAAC,CAAC,GACnD2E,cAAc;EACpB,OAAQ/D,KAAK,CAAC8M,aAAa,CAAC7L,cAAc,EAAE;IAAEoQ,QAAQ,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAOlK,UAAU,CAACoB,OAAO,CAAC+I,mBAAmB,CAAC,CAAC;IAAE;EAAE,CAAC,EAAEF,kBAAkB,KAAKzL,SAAS,IAAIyL,kBAAkB,KAAK,IAAI,GAAIP,UAAU,CAACO,kBAAkB,CAAC,GAAKpR,KAAK,CAAC8M,aAAa,CAACvL,UAAU,EAAE5D,QAAQ,CAAC,CAAC,CAAC,EAAE0F,KAAK,EAAEkM,uBAAuB,EAAE;IAAExM,GAAG,EAAEqE,aAAa;IAC/T;IACAhI,KAAK,EAAEA,KAAK;IAAEsG,UAAU,EAAEA,UAAU;IAAEM,YAAY,EAAEA,YAAY;IAChE;IACA5C,GAAG,EAAEA,GAAG;IAAE+B,SAAS,EAAEA,SAAS;IAAED,WAAW,EAAE,CAAC,CAACA,WAAW;IAAEqM,YAAY,EAAE5J,eAAe;IAAEjG,YAAY,EAAEkG,kBAAkB;IAAE4J,UAAU,EAAEpM,cAAc;IAAEqM,MAAM,EAAE9F,oBAAoB;IAAE+F,UAAU,EAAE,SAAAA,CAAUtS,KAAK,EAAE;MAChN,IAAI2K,MAAM,GAAGQ,oBAAoB,CAACnL,KAAK,CAAC;MACxC,IAAIuS,IAAI,GAAGvS,KAAK;MAChB,IAAI+B,UAAU,CAACoC,YAAY,CAAC,EAAE;QAC1B,IAAIqI,iBAAiB,GAAGZ,4BAA4B,CAAC5L,KAAK,EAAE,KAAK,CAAC;QAClEuS,IAAI,GAAGpO,YAAY,CAACqI,iBAAiB,CAAC7B,MAAM,IAAI,IAAI,EAAE6B,iBAAiB,CAACxM,KAAK,CAAC;MAClF,CAAC,MACI;QACD,IAAIwS,mBAAmB,GAAG,KAAK;QAC/B,IAAI/N,YAAY,EAAE;UACd,IAAIwH,SAAS,GAAGhI,KAAK,CAACjE,KAAK,IAAIiE,KAAK,CAACiC,YAAY;UACjD,IAAIzF,KAAK,CAACqB,OAAO,CAACmK,SAAS,CAAC,EAAE;YAC1B,IAAIwG,kBAAkB,GAAGxG,SAAS,CAACrB,IAAI,CAAC,UAAUC,IAAI,EAAE;cAAE,OAAO7I,QAAQ,CAAC6I,IAAI,CAAC,IAAIA,IAAI,CAAC7K,KAAK,KAAKA,KAAK;YAAE,CAAC,CAAC;YAC3G,IAAIyS,kBAAkB,EAAE;cACpBF,IAAI,GAAGE,kBAAkB,CAACrG,KAAK;cAC/BoG,mBAAmB,GAAG,IAAI;YAC9B;UACJ,CAAC,MACI,IAAIxQ,QAAQ,CAACiK,SAAS,CAAC,EAAE;YAC1BsG,IAAI,GAAGtG,SAAS,CAACG,KAAK;YACtBoG,mBAAmB,GAAG,IAAI;UAC9B;QACJ;QACA,IAAI,CAACA,mBAAmB,IAAI7H,MAAM,IAAI,UAAU,IAAIA,MAAM,EAAE;UACxD4H,IAAI,GAAG5H,MAAM,CAACzG,QAAQ;QAC1B;MACJ;MACA,OAAO;QACHqO,IAAI,EAAEA,IAAI;QACVnO,QAAQ,EAAEuG,MAAM,IAAIA,MAAM,CAACvG;MAC/B,CAAC;IACL,CAAC;IAAEqN,UAAU,EAAEA;EAAW,CAAC,CAAC,CAAE,CAAC;AACvC;AACA,IAAIiB,gBAAgB,GAAG9R,KAAK,CAAC+R,UAAU,CAAClP,MAAM,CAAC;AAC/C,IAAImP,eAAe,GAAGF,gBAAgB;AACtCE,eAAe,CAACC,WAAW,GAAG,QAAQ;AACtCD,eAAe,CAAChR,MAAM,GAAGA,MAAM;AAC/BgR,eAAe,CAACjR,QAAQ,GAAGA,QAAQ;AACnC,eAAeiR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}