{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport React, { useEffect, useImperativeHandle, useRef, useMemo, useState } from 'react';\nimport { getValidScrollTop, getCompareItemRelativeTop, getItemAbsoluteTop, getItemRelativeTop, getNodeHeight, getRangeIndex, getScrollPercentage, GHOST_ITEM_KEY, getLongestItemIndex, getLocationItem } from './utils/itemUtil';\nimport { raf, caf } from '../../_util/raf';\nimport { isFunction, isNumber } from '../../_util/is';\nimport usePrevious from '../../_util/hooks/usePrevious';\nimport { findListDiffIndex, getIndexByStartLoc } from './utils/algorithmUtil';\nimport Filler from './Filler';\nimport useStateWithPromise from '../../_util/hooks/useStateWithPromise';\nimport useIsFirstRender from '../../_util/hooks/useIsFirstRender';\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport ResizeObserver from '../../_util/resizeObserver';\nimport useIsomorphicLayoutEffect from '../../_util/hooks/useIsomorphicLayoutEffect';\n// height of the virtual element, used to calculate total height of the virtual list\nvar DEFAULT_VIRTUAL_ITEM_HEIGHT = 32;\nvar KEY_VIRTUAL_ITEM_HEIGHT = \"__virtual_item_height_\" + Math.random().toFixed(5).slice(2);\n// after collecting the real height of the first screen element, calculate the virtual ItemHeight to trigger list re-rendering\nvar useComputeVirtualItemHeight = function (refItemHeightMap) {\n  var forceUpdate = useForceUpdate();\n  var heightMap = refItemHeightMap.current;\n  useEffect(function () {\n    // virtual item height should be static as possible, otherwise it is easy to cause jitter\n    if (Object.keys(heightMap).length && !heightMap[KEY_VIRTUAL_ITEM_HEIGHT]) {\n      heightMap[KEY_VIRTUAL_ITEM_HEIGHT] = Object.entries(heightMap).reduce(function (sum, _a, currentIndex, array) {\n        var _b = __read(_a, 2),\n          currentHeight = _b[1];\n        var nextSum = sum + currentHeight;\n        return currentIndex === array.length - 1 ? Math.round(nextSum / array.length) : nextSum;\n      }, 0);\n      forceUpdate();\n    }\n  }, [Object.keys(heightMap).length]);\n};\n// cache the constructed results of child nodes to avoid redrawing of child nodes caused by re-construction during drawing\nvar useCacheChildrenNodes = function (children) {\n  var refCacheMap = useRef({});\n  var refPrevChildren = useRef(children);\n  useEffect(function () {\n    refPrevChildren.current = children;\n  }, [children]);\n  // children change means state of parent component is updated, so clear cache\n  if (children !== refPrevChildren.current) {\n    refCacheMap.current = {};\n  }\n  return function (item, index, props) {\n    if (!refCacheMap.current.hasOwnProperty(index)) {\n      refCacheMap.current[index] = children(item, index, props);\n    }\n    return refCacheMap.current[index];\n  };\n};\nvar VirtualList = React.forwardRef(function (props, ref) {\n  var style = props.style,\n    className = props.className,\n    children = props.children,\n    _a = props.data,\n    data = _a === void 0 ? [] : _a,\n    itemKey = props.itemKey,\n    _b = props.threshold,\n    threshold = _b === void 0 ? 100 : _b,\n    _c = props.wrapper,\n    WrapperTagName = _c === void 0 ? 'div' : _c,\n    _d = props.height,\n    propHeight = _d === void 0 ? '100%' : _d,\n    _e = props.isStaticItemHeight,\n    isStaticItemHeight = _e === void 0 ? true : _e,\n    propItemHeight = props.itemHeight,\n    measureLongestItem = props.measureLongestItem,\n    scrollOptions = props.scrollOptions,\n    onScroll = props.onScroll,\n    _f = props.needFiller,\n    needFiller = _f === void 0 ? true : _f,\n    outerStyle = props.outerStyle,\n    innerStyle = props.innerStyle,\n    _g = props.wrapperChild,\n    WrapperChildTagName = _g === void 0 ? React.Fragment : _g,\n    restProps = __rest(props, [\"style\", \"className\", \"children\", \"data\", \"itemKey\", \"threshold\", \"wrapper\", \"height\", \"isStaticItemHeight\", \"itemHeight\", \"measureLongestItem\", \"scrollOptions\", \"onScroll\", \"needFiller\", \"outerStyle\", \"innerStyle\", \"wrapperChild\"]);\n  // Compatible with setting the height of the list through style.maxHeight\n  var styleListMaxHeight = style && style.maxHeight || propHeight;\n  var refItemHeightMap = useRef({});\n  var _h = __read(useState(200), 2),\n    stateHeight = _h[0],\n    setStateHeight = _h[1];\n  var renderChild = useCacheChildrenNodes(children);\n  useComputeVirtualItemHeight(refItemHeightMap);\n  // Elements with the same height, the height of the item is based on the first rendering\n  var itemCount = data.length;\n  var itemHeight = propItemHeight || refItemHeightMap.current[KEY_VIRTUAL_ITEM_HEIGHT] || DEFAULT_VIRTUAL_ITEM_HEIGHT;\n  var viewportHeight = isNumber(styleListMaxHeight) ? styleListMaxHeight : stateHeight;\n  var itemCountVisible = Math.ceil(viewportHeight / itemHeight);\n  var itemTotalHeight = itemHeight * itemCount;\n  var isVirtual = threshold !== null && itemCount >= threshold && itemTotalHeight > viewportHeight;\n  var refList = useRef(null);\n  var refRafId = useRef(null);\n  var refLockScroll = useRef(false);\n  var refIsVirtual = useRef(isVirtual);\n  // The paddingTop of the record scrolling list is used to correct the scrolling distance\n  var scrollListPadding = useMemo(function () {\n    if (refList.current) {\n      var getPadding = function (property) {\n        return +window.getComputedStyle(refList.current)[property].replace(/\\D/g, '');\n      };\n      return {\n        top: getPadding('paddingTop'),\n        bottom: getPadding('paddingBottom')\n      };\n    }\n    return {\n      top: 0,\n      bottom: 0\n    };\n  }, [refList.current]);\n  var _j = __read(useStateWithPromise({\n      // measure status\n      status: 'NONE',\n      // render range info\n      startIndex: 0,\n      endIndex: 0,\n      itemIndex: 0,\n      itemOffsetPtg: 0,\n      // scroll info\n      startItemTop: 0,\n      scrollTop: 0\n    }), 2),\n    state = _j[0],\n    setState = _j[1];\n  var prevData = usePrevious(data) || [];\n  var isFirstRender = useIsFirstRender();\n  var getItemKey = function (item, index) {\n    return typeof itemKey === 'function' ? itemKey(item, index) : typeof itemKey === 'string' ? item[itemKey] : item.key || index;\n  };\n  var getItemKeyByIndex = function (index, items) {\n    if (items === void 0) {\n      items = data;\n    }\n    if (index === items.length) {\n      return GHOST_ITEM_KEY;\n    }\n    var item = items[index];\n    return item !== undefined ? getItemKey(item, index) : null;\n  };\n  var getCachedItemHeight = function (key) {\n    return refItemHeightMap.current[key] || itemHeight;\n  };\n  var internalScrollTo = function (relativeScroll) {\n    var compareItemIndex = relativeScroll.itemIndex,\n      compareItemRelativeTop = relativeScroll.relativeTop;\n    var _a = refList.current,\n      scrollHeight = _a.scrollHeight,\n      clientHeight = _a.clientHeight;\n    var originScrollTop = state.scrollTop;\n    var maxScrollTop = scrollHeight - clientHeight;\n    var bestSimilarity = Number.MAX_VALUE;\n    var bestScrollTop = null;\n    var bestItemIndex = null;\n    var bestItemOffsetPtg = null;\n    var bestStartIndex = null;\n    var bestEndIndex = null;\n    var missSimilarity = 0;\n    for (var i = 0; i < maxScrollTop; i++) {\n      var scrollTop = getIndexByStartLoc(0, maxScrollTop, originScrollTop, i);\n      var scrollPtg = getScrollPercentage({\n        scrollTop: scrollTop,\n        scrollHeight: scrollHeight,\n        clientHeight: clientHeight\n      });\n      var _b = getRangeIndex(scrollPtg, itemCount, itemCountVisible),\n        itemIndex = _b.itemIndex,\n        itemOffsetPtg = _b.itemOffsetPtg,\n        startIndex = _b.startIndex,\n        endIndex = _b.endIndex;\n      if (startIndex <= compareItemIndex && compareItemIndex <= endIndex) {\n        var locatedItemRelativeTop = getItemRelativeTop({\n          itemHeight: getCachedItemHeight(getItemKeyByIndex(itemIndex)),\n          itemOffsetPtg: itemOffsetPtg,\n          clientHeight: clientHeight,\n          scrollPtg: scrollPtg\n        });\n        var compareItemTop = getCompareItemRelativeTop({\n          locatedItemRelativeTop: locatedItemRelativeTop,\n          locatedItemIndex: itemIndex,\n          compareItemIndex: compareItemIndex,\n          startIndex: startIndex,\n          endIndex: endIndex,\n          itemHeight: itemHeight,\n          getItemKey: getItemKeyByIndex,\n          itemElementHeights: refItemHeightMap.current\n        });\n        var similarity = Math.abs(compareItemTop - compareItemRelativeTop);\n        if (similarity < bestSimilarity) {\n          bestSimilarity = similarity;\n          bestScrollTop = scrollTop;\n          bestItemIndex = itemIndex;\n          bestItemOffsetPtg = itemOffsetPtg;\n          bestStartIndex = startIndex;\n          bestEndIndex = endIndex;\n          missSimilarity = 0;\n        } else {\n          missSimilarity += 1;\n        }\n      }\n      if (missSimilarity > 10) {\n        break;\n      }\n    }\n    if (bestScrollTop !== null) {\n      refLockScroll.current = true;\n      refList.current.scrollTop = bestScrollTop;\n      setState(__assign(__assign({}, state), {\n        status: 'MEASURE_START',\n        scrollTop: bestScrollTop,\n        itemIndex: bestItemIndex,\n        itemOffsetPtg: bestItemOffsetPtg,\n        startIndex: bestStartIndex,\n        endIndex: bestEndIndex\n      }));\n    }\n    refRafId.current = raf(function () {\n      refLockScroll.current = false;\n    });\n  };\n  // Record the current element position when the real list is scrolled, and ensure that the position is correct after switching to the virtual list\n  var rawListScrollHandler = function (event) {\n    var _a = refList.current,\n      rawScrollTop = _a.scrollTop,\n      clientHeight = _a.clientHeight,\n      scrollHeight = _a.scrollHeight;\n    var scrollTop = getValidScrollTop(rawScrollTop, scrollHeight - clientHeight);\n    var scrollPtg = getScrollPercentage({\n      scrollTop: scrollTop,\n      clientHeight: clientHeight,\n      scrollHeight: scrollHeight\n    });\n    var _b = getLocationItem(scrollPtg, itemCount),\n      index = _b.index,\n      offsetPtg = _b.offsetPtg;\n    setState(__assign(__assign({}, state), {\n      scrollTop: scrollTop,\n      itemIndex: index,\n      itemOffsetPtg: offsetPtg\n    }));\n    event && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(event, {\n      index: index\n    }));\n  };\n  // Modify the state and recalculate the position in the next render\n  var virtualListScrollHandler = function (event, isInit) {\n    if (isInit === void 0) {\n      isInit = false;\n    }\n    // Do NOT use refList.current.scrollHeight\n    // We should use Filler's height as total scroll height\n    // Filler's translate style may make refList.current.scrollHeight larger than Filler's height\n    var scrollHeight = itemTotalHeight;\n    var _a = refList.current,\n      rawScrollTop = _a.scrollTop,\n      clientHeight = _a.clientHeight;\n    var scrollTop = getValidScrollTop(rawScrollTop, scrollHeight - clientHeight);\n    // Prevent jitter\n    if (!isInit && (scrollTop === state.scrollTop || refLockScroll.current)) {\n      return;\n    }\n    var scrollPtg = getScrollPercentage({\n      scrollTop: scrollTop,\n      clientHeight: clientHeight,\n      scrollHeight: scrollHeight\n    });\n    var _b = getRangeIndex(scrollPtg, itemCount, itemCountVisible),\n      itemIndex = _b.itemIndex,\n      itemOffsetPtg = _b.itemOffsetPtg,\n      startIndex = _b.startIndex,\n      endIndex = _b.endIndex;\n    setState(__assign(__assign({}, state), {\n      scrollTop: scrollTop,\n      itemIndex: itemIndex,\n      itemOffsetPtg: itemOffsetPtg,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      status: 'MEASURE_START'\n    }));\n    event && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(event, {\n      index: itemIndex\n    }));\n  };\n  useEffect(function () {\n    return function () {\n      refRafId.current && caf(refRafId.current);\n    };\n  }, []);\n  // rerender when the number of visible elements changes\n  useEffect(function () {\n    if (refList.current) {\n      if (isFirstRender) {\n        refList.current.scrollTop = 0;\n      }\n      virtualListScrollHandler(null, true);\n    }\n  }, [itemCountVisible]);\n  // Handle additions and deletions of list items or switching the virtual state\n  useEffect(function () {\n    if (!refList.current) return;\n    var changedItemIndex = null;\n    var switchTo = refIsVirtual.current !== isVirtual ? isVirtual ? 'virtual' : 'raw' : '';\n    refIsVirtual.current = isVirtual;\n    if (viewportHeight && prevData.length !== data.length) {\n      var diff = findListDiffIndex(prevData, data, getItemKey);\n      changedItemIndex = diff ? diff.index : null;\n    }\n    // No need to correct the position when the number of elements in the real list changes\n    if (switchTo || isVirtual && changedItemIndex) {\n      var clientHeight = refList.current.clientHeight;\n      var locatedItemRelativeTop = getItemRelativeTop({\n        itemHeight: getCachedItemHeight(getItemKeyByIndex(state.itemIndex, prevData)),\n        itemOffsetPtg: state.itemOffsetPtg,\n        scrollPtg: getScrollPercentage({\n          scrollTop: state.scrollTop,\n          scrollHeight: prevData.length * itemHeight,\n          clientHeight: clientHeight\n        }),\n        clientHeight: clientHeight\n      });\n      if (switchTo === 'raw') {\n        var rawTop = locatedItemRelativeTop;\n        for (var index = 0; index < state.itemIndex; index++) {\n          rawTop -= getCachedItemHeight(getItemKeyByIndex(index));\n        }\n        refList.current.scrollTop = -rawTop;\n        refLockScroll.current = true;\n        refRafId.current = raf(function () {\n          refLockScroll.current = false;\n        });\n      } else {\n        internalScrollTo({\n          itemIndex: state.itemIndex,\n          relativeTop: locatedItemRelativeTop\n        });\n      }\n    }\n  }, [data, isVirtual]);\n  useIsomorphicLayoutEffect(function () {\n    if (state.status === 'MEASURE_START' && refList.current) {\n      var _a = refList.current,\n        scrollTop = _a.scrollTop,\n        scrollHeight = _a.scrollHeight,\n        clientHeight = _a.clientHeight;\n      var scrollPtg = getScrollPercentage({\n        scrollTop: scrollTop,\n        scrollHeight: scrollHeight,\n        clientHeight: clientHeight\n      });\n      // Calculate the top value of the first rendering element\n      var startItemTop = getItemAbsoluteTop({\n        scrollPtg: scrollPtg,\n        clientHeight: clientHeight,\n        scrollTop: scrollTop - (scrollListPadding.top + scrollListPadding.bottom) * scrollPtg,\n        itemHeight: getCachedItemHeight(getItemKeyByIndex(state.itemIndex)),\n        itemOffsetPtg: state.itemOffsetPtg\n      });\n      for (var index = state.itemIndex - 1; index >= state.startIndex; index--) {\n        startItemTop -= getCachedItemHeight(getItemKeyByIndex(index));\n      }\n      setState(__assign(__assign({}, state), {\n        startItemTop: startItemTop,\n        status: 'MEASURE_DONE'\n      }));\n    }\n  }, [state]);\n  useImperativeHandle(ref, function () {\n    return {\n      dom: refList.current,\n      getRootDOMNode: function () {\n        return refList.current;\n      },\n      // Scroll to a certain height or an element\n      scrollTo: function (arg) {\n        refRafId.current && caf(refRafId.current);\n        refRafId.current = raf(function () {\n          var _a;\n          if (!refList.current) return;\n          if (typeof arg === 'number') {\n            refList.current.scrollTop = arg;\n            return;\n          }\n          var index = 'index' in arg ? arg.index : 'key' in arg ? data.findIndex(function (item, index) {\n            return getItemKey(item, index) === arg.key;\n          }) : 0;\n          var item = data[index];\n          if (!item) {\n            return;\n          }\n          var align = typeof arg === 'object' && ((_a = arg.options) === null || _a === void 0 ? void 0 : _a.block) ? arg.options.block : (scrollOptions === null || scrollOptions === void 0 ? void 0 : scrollOptions.block) || 'nearest';\n          var _b = refList.current,\n            clientHeight = _b.clientHeight,\n            scrollTop = _b.scrollTop;\n          if (isVirtual && !isStaticItemHeight) {\n            if (align === 'nearest') {\n              var itemIndex = state.itemIndex,\n                itemOffsetPtg = state.itemOffsetPtg;\n              if (Math.abs(itemIndex - index) < itemCountVisible) {\n                var itemTop = getItemRelativeTop({\n                  itemHeight: getCachedItemHeight(getItemKeyByIndex(itemIndex)),\n                  itemOffsetPtg: itemOffsetPtg,\n                  clientHeight: clientHeight,\n                  scrollPtg: getScrollPercentage(refList.current)\n                });\n                if (index < itemIndex) {\n                  for (var i = index; i < itemIndex; i++) {\n                    itemTop -= getCachedItemHeight(getItemKeyByIndex(i));\n                  }\n                } else {\n                  for (var i = itemIndex; i < index; i++) {\n                    itemTop += getCachedItemHeight(getItemKeyByIndex(i));\n                  }\n                }\n                // When the target element is within the field of view, exit directly\n                if (itemTop < 0 || itemTop > clientHeight) {\n                  align = itemTop < 0 ? 'start' : 'end';\n                } else {\n                  return;\n                }\n              } else {\n                align = index < itemIndex ? 'start' : 'end';\n              }\n            }\n            setState(__assign(__assign({}, state), {\n              startIndex: Math.max(0, index - itemCountVisible),\n              endIndex: Math.min(itemCount - 1, index + itemCountVisible)\n            })).then(function () {\n              var itemHeight = getCachedItemHeight(getItemKey(item, index));\n              internalScrollTo({\n                itemIndex: index,\n                relativeTop: align === 'start' ? 0 : (clientHeight - itemHeight) / (align === 'center' ? 2 : 1)\n              });\n            });\n          } else {\n            var indexItemHeight = getCachedItemHeight(getItemKeyByIndex(index));\n            var itemTop = 0;\n            for (var i = 0; i < index; i++) {\n              itemTop += getCachedItemHeight(getItemKeyByIndex(i));\n            }\n            var itemBottom = itemTop + indexItemHeight;\n            var itemMiddle = itemTop + indexItemHeight / 2;\n            // If item is visible, skip scrolling\n            if (itemMiddle > scrollTop && itemMiddle < clientHeight + scrollTop) {\n              return;\n            }\n            if (align === 'nearest') {\n              if (itemTop < scrollTop) {\n                align = 'start';\n              } else if (itemBottom > scrollTop + clientHeight) {\n                align = 'end';\n              }\n            }\n            var viewportHeight_1 = clientHeight - indexItemHeight;\n            refList.current.scrollTop = itemTop - (align === 'start' ? 0 : viewportHeight_1 / (align === 'center' ? 2 : 1));\n          }\n        });\n      }\n    };\n  }, [data, itemHeight, state]);\n  var renderChildren = function (list, startIndex) {\n    return list.map(function (item, index) {\n      var originIndex = startIndex + index;\n      var node = renderChild(item, originIndex, {\n        style: {},\n        itemIndex: index\n      });\n      var key = getItemKey(item, originIndex);\n      return React.cloneElement(node, {\n        key: key,\n        ref: function (ele) {\n          var _a, _b;\n          var heightMap = refItemHeightMap.current;\n          // Minimize the measurement of element height as much as possible to avoid frequent triggering of browser reflow\n          // Method getNodeHeight get the clientHeight from the DOM referred by React ref. If result is wrong, check the ref of this element\n          if (ele && state.status === 'MEASURE_START' && (!isStaticItemHeight || heightMap[key] === undefined)) {\n            if (isStaticItemHeight) {\n              if (!heightMap[KEY_VIRTUAL_ITEM_HEIGHT]) {\n                heightMap[KEY_VIRTUAL_ITEM_HEIGHT] = getNodeHeight(ele, true);\n              }\n              heightMap[key] = heightMap[KEY_VIRTUAL_ITEM_HEIGHT];\n            } else {\n              heightMap[key] = getNodeHeight(ele, true);\n            }\n          }\n          if (isFunction((_a = node) === null || _a === void 0 ? void 0 : _a.ref)) {\n            (_b = node) === null || _b === void 0 ? void 0 : _b.ref(ele);\n          }\n        }\n      });\n    });\n  };\n  // Render the widest element to provide the maximum width of the container initially\n  var refLongestItemIndex = useRef(null);\n  // Don't add `renderChild` to the array dependency, it will change every time when rerender\n  useEffect(function () {\n    refLongestItemIndex.current = null;\n  }, [data]);\n  var renderLongestItem = function () {\n    if (measureLongestItem) {\n      var index = refLongestItemIndex.current === null ? getLongestItemIndex(data) : refLongestItemIndex.current;\n      var item = data[index];\n      refLongestItemIndex.current = index;\n      return item ? React.createElement(\"div\", {\n        style: {\n          height: 1,\n          overflow: 'hidden',\n          opacity: 0\n        }\n      }, renderChild(item, index, {\n        style: {}\n      })) : null;\n    }\n    return null;\n  };\n  return React.createElement(ResizeObserver, {\n    onResize: function () {\n      if (refList.current && !isNumber(styleListMaxHeight)) {\n        var clientHeight = refList.current.clientHeight;\n        setStateHeight(clientHeight);\n      }\n    },\n    getTargetDOMNode: function () {\n      return refList.current;\n    }\n  }, React.createElement(WrapperTagName, __assign({\n    ref: refList,\n    style: __assign(__assign({\n      overflowY: 'auto',\n      overflowAnchor: 'none'\n    }, style), {\n      maxHeight: styleListMaxHeight\n    }),\n    className: className,\n    onScroll: isVirtual ? virtualListScrollHandler : rawListScrollHandler\n  }, restProps), isVirtual ? React.createElement(React.Fragment, null, React.createElement(Filler, {\n    height: itemTotalHeight,\n    outerStyle: outerStyle,\n    innerStyle: innerStyle,\n    offset: state.status === 'MEASURE_DONE' ? state.startItemTop : 0\n  }, React.createElement(WrapperChildTagName, null, renderChildren(data.slice(state.startIndex, state.endIndex + 1), state.startIndex))), renderLongestItem()) : needFiller ? React.createElement(Filler, {\n    height: viewportHeight,\n    outerStyle: outerStyle,\n    innerStyle: innerStyle\n  }, React.createElement(WrapperChildTagName, null, renderChildren(data, 0))) : React.createElement(WrapperChildTagName, null, renderChildren(data, 0))));\n});\nVirtualList.displayName = 'VirtualList';\nexport default VirtualList;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__read","o","m","Symbol","iterator","r","ar","next","done","push","value","error","React","useEffect","useImperativeHandle","useRef","useMemo","useState","getValidScrollTop","getCompareItemRelativeTop","getItemAbsoluteTop","getItemRelativeTop","getNodeHeight","getRangeIndex","getScrollPercentage","GHOST_ITEM_KEY","getLongestItemIndex","getLocationItem","raf","caf","isFunction","isNumber","usePrevious","findListDiffIndex","getIndexByStartLoc","Filler","useStateWithPromise","useIsFirstRender","useForceUpdate","ResizeObserver","useIsomorphicLayoutEffect","DEFAULT_VIRTUAL_ITEM_HEIGHT","KEY_VIRTUAL_ITEM_HEIGHT","Math","random","toFixed","slice","useComputeVirtualItemHeight","refItemHeightMap","forceUpdate","heightMap","current","keys","entries","reduce","sum","_a","currentIndex","array","_b","currentHeight","nextSum","round","useCacheChildrenNodes","children","refCacheMap","refPrevChildren","item","index","props","VirtualList","forwardRef","ref","style","className","data","itemKey","threshold","_c","wrapper","WrapperTagName","_d","height","propHeight","_e","isStaticItemHeight","propItemHeight","itemHeight","measureLongestItem","scrollOptions","onScroll","_f","needFiller","outerStyle","innerStyle","_g","wrapperChild","WrapperChildTagName","Fragment","restProps","styleListMaxHeight","maxHeight","_h","stateHeight","setStateHeight","renderChild","itemCount","viewportHeight","itemCountVisible","ceil","itemTotalHeight","isVirtual","refList","refRafId","refLockScroll","refIsVirtual","scrollListPadding","getPadding","property","window","getComputedStyle","replace","top","bottom","_j","status","startIndex","endIndex","itemIndex","itemOffsetPtg","startItemTop","scrollTop","state","setState","prevData","isFirstRender","getItemKey","key","getItemKeyByIndex","items","undefined","getCachedItemHeight","internalScrollTo","relativeScroll","compareItemIndex","compareItemRelativeTop","relativeTop","scrollHeight","clientHeight","originScrollTop","maxScrollTop","bestSimilarity","Number","MAX_VALUE","bestScrollTop","bestItemIndex","bestItemOffsetPtg","bestStartIndex","bestEndIndex","missSimilarity","scrollPtg","locatedItemRelativeTop","compareItemTop","locatedItemIndex","itemElementHeights","similarity","abs","rawListScrollHandler","event","rawScrollTop","offsetPtg","virtualListScrollHandler","isInit","changedItemIndex","switchTo","diff","rawTop","dom","getRootDOMNode","scrollTo","arg","findIndex","align","options","block","itemTop","max","min","then","indexItemHeight","itemBottom","itemMiddle","viewportHeight_1","renderChildren","list","map","originIndex","node","cloneElement","ele","refLongestItemIndex","renderLongestItem","createElement","overflow","opacity","onResize","getTargetDOMNode","overflowY","overflowAnchor","offset","displayName"],"sources":["D:/Nodejs/oj-frontend/node_modules/@arco-design/web-react/es/_class/VirtualList/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport React, { useEffect, useImperativeHandle, useRef, useMemo, useState, } from 'react';\nimport { getValidScrollTop, getCompareItemRelativeTop, getItemAbsoluteTop, getItemRelativeTop, getNodeHeight, getRangeIndex, getScrollPercentage, GHOST_ITEM_KEY, getLongestItemIndex, getLocationItem, } from './utils/itemUtil';\nimport { raf, caf } from '../../_util/raf';\nimport { isFunction, isNumber } from '../../_util/is';\nimport usePrevious from '../../_util/hooks/usePrevious';\nimport { findListDiffIndex, getIndexByStartLoc } from './utils/algorithmUtil';\nimport Filler from './Filler';\nimport useStateWithPromise from '../../_util/hooks/useStateWithPromise';\nimport useIsFirstRender from '../../_util/hooks/useIsFirstRender';\nimport useForceUpdate from '../../_util/hooks/useForceUpdate';\nimport ResizeObserver from '../../_util/resizeObserver';\nimport useIsomorphicLayoutEffect from '../../_util/hooks/useIsomorphicLayoutEffect';\n// height of the virtual element, used to calculate total height of the virtual list\nvar DEFAULT_VIRTUAL_ITEM_HEIGHT = 32;\nvar KEY_VIRTUAL_ITEM_HEIGHT = \"__virtual_item_height_\" + Math.random().toFixed(5).slice(2);\n// after collecting the real height of the first screen element, calculate the virtual ItemHeight to trigger list re-rendering\nvar useComputeVirtualItemHeight = function (refItemHeightMap) {\n    var forceUpdate = useForceUpdate();\n    var heightMap = refItemHeightMap.current;\n    useEffect(function () {\n        // virtual item height should be static as possible, otherwise it is easy to cause jitter\n        if (Object.keys(heightMap).length && !heightMap[KEY_VIRTUAL_ITEM_HEIGHT]) {\n            heightMap[KEY_VIRTUAL_ITEM_HEIGHT] = Object.entries(heightMap).reduce(function (sum, _a, currentIndex, array) {\n                var _b = __read(_a, 2), currentHeight = _b[1];\n                var nextSum = sum + currentHeight;\n                return currentIndex === array.length - 1 ? Math.round(nextSum / array.length) : nextSum;\n            }, 0);\n            forceUpdate();\n        }\n    }, [Object.keys(heightMap).length]);\n};\n// cache the constructed results of child nodes to avoid redrawing of child nodes caused by re-construction during drawing\nvar useCacheChildrenNodes = function (children) {\n    var refCacheMap = useRef({});\n    var refPrevChildren = useRef(children);\n    useEffect(function () {\n        refPrevChildren.current = children;\n    }, [children]);\n    // children change means state of parent component is updated, so clear cache\n    if (children !== refPrevChildren.current) {\n        refCacheMap.current = {};\n    }\n    return function (item, index, props) {\n        if (!refCacheMap.current.hasOwnProperty(index)) {\n            refCacheMap.current[index] = children(item, index, props);\n        }\n        return refCacheMap.current[index];\n    };\n};\nvar VirtualList = React.forwardRef(function (props, ref) {\n    var style = props.style, className = props.className, children = props.children, _a = props.data, data = _a === void 0 ? [] : _a, itemKey = props.itemKey, _b = props.threshold, threshold = _b === void 0 ? 100 : _b, _c = props.wrapper, WrapperTagName = _c === void 0 ? 'div' : _c, _d = props.height, propHeight = _d === void 0 ? '100%' : _d, _e = props.isStaticItemHeight, isStaticItemHeight = _e === void 0 ? true : _e, propItemHeight = props.itemHeight, measureLongestItem = props.measureLongestItem, scrollOptions = props.scrollOptions, onScroll = props.onScroll, _f = props.needFiller, needFiller = _f === void 0 ? true : _f, outerStyle = props.outerStyle, innerStyle = props.innerStyle, _g = props.wrapperChild, WrapperChildTagName = _g === void 0 ? React.Fragment : _g, restProps = __rest(props, [\"style\", \"className\", \"children\", \"data\", \"itemKey\", \"threshold\", \"wrapper\", \"height\", \"isStaticItemHeight\", \"itemHeight\", \"measureLongestItem\", \"scrollOptions\", \"onScroll\", \"needFiller\", \"outerStyle\", \"innerStyle\", \"wrapperChild\"]);\n    // Compatible with setting the height of the list through style.maxHeight\n    var styleListMaxHeight = (style && style.maxHeight) || propHeight;\n    var refItemHeightMap = useRef({});\n    var _h = __read(useState(200), 2), stateHeight = _h[0], setStateHeight = _h[1];\n    var renderChild = useCacheChildrenNodes(children);\n    useComputeVirtualItemHeight(refItemHeightMap);\n    // Elements with the same height, the height of the item is based on the first rendering\n    var itemCount = data.length;\n    var itemHeight = propItemHeight ||\n        refItemHeightMap.current[KEY_VIRTUAL_ITEM_HEIGHT] ||\n        DEFAULT_VIRTUAL_ITEM_HEIGHT;\n    var viewportHeight = isNumber(styleListMaxHeight) ? styleListMaxHeight : stateHeight;\n    var itemCountVisible = Math.ceil(viewportHeight / itemHeight);\n    var itemTotalHeight = itemHeight * itemCount;\n    var isVirtual = threshold !== null && itemCount >= threshold && itemTotalHeight > viewportHeight;\n    var refList = useRef(null);\n    var refRafId = useRef(null);\n    var refLockScroll = useRef(false);\n    var refIsVirtual = useRef(isVirtual);\n    // The paddingTop of the record scrolling list is used to correct the scrolling distance\n    var scrollListPadding = useMemo(function () {\n        if (refList.current) {\n            var getPadding = function (property) {\n                return +window.getComputedStyle(refList.current)[property].replace(/\\D/g, '');\n            };\n            return {\n                top: getPadding('paddingTop'),\n                bottom: getPadding('paddingBottom'),\n            };\n        }\n        return { top: 0, bottom: 0 };\n    }, [refList.current]);\n    var _j = __read(useStateWithPromise({\n        // measure status\n        status: 'NONE',\n        // render range info\n        startIndex: 0,\n        endIndex: 0,\n        itemIndex: 0,\n        itemOffsetPtg: 0,\n        // scroll info\n        startItemTop: 0,\n        scrollTop: 0,\n    }), 2), state = _j[0], setState = _j[1];\n    var prevData = usePrevious(data) || [];\n    var isFirstRender = useIsFirstRender();\n    var getItemKey = function (item, index) {\n        return typeof itemKey === 'function'\n            ? itemKey(item, index)\n            : typeof itemKey === 'string'\n                ? item[itemKey]\n                : item.key || index;\n    };\n    var getItemKeyByIndex = function (index, items) {\n        if (items === void 0) { items = data; }\n        if (index === items.length) {\n            return GHOST_ITEM_KEY;\n        }\n        var item = items[index];\n        return item !== undefined ? getItemKey(item, index) : null;\n    };\n    var getCachedItemHeight = function (key) {\n        return refItemHeightMap.current[key] || itemHeight;\n    };\n    var internalScrollTo = function (relativeScroll) {\n        var compareItemIndex = relativeScroll.itemIndex, compareItemRelativeTop = relativeScroll.relativeTop;\n        var _a = refList.current, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n        var originScrollTop = state.scrollTop;\n        var maxScrollTop = scrollHeight - clientHeight;\n        var bestSimilarity = Number.MAX_VALUE;\n        var bestScrollTop = null;\n        var bestItemIndex = null;\n        var bestItemOffsetPtg = null;\n        var bestStartIndex = null;\n        var bestEndIndex = null;\n        var missSimilarity = 0;\n        for (var i = 0; i < maxScrollTop; i++) {\n            var scrollTop = getIndexByStartLoc(0, maxScrollTop, originScrollTop, i);\n            var scrollPtg = getScrollPercentage({ scrollTop: scrollTop, scrollHeight: scrollHeight, clientHeight: clientHeight });\n            var _b = getRangeIndex(scrollPtg, itemCount, itemCountVisible), itemIndex = _b.itemIndex, itemOffsetPtg = _b.itemOffsetPtg, startIndex = _b.startIndex, endIndex = _b.endIndex;\n            if (startIndex <= compareItemIndex && compareItemIndex <= endIndex) {\n                var locatedItemRelativeTop = getItemRelativeTop({\n                    itemHeight: getCachedItemHeight(getItemKeyByIndex(itemIndex)),\n                    itemOffsetPtg: itemOffsetPtg,\n                    clientHeight: clientHeight,\n                    scrollPtg: scrollPtg,\n                });\n                var compareItemTop = getCompareItemRelativeTop({\n                    locatedItemRelativeTop: locatedItemRelativeTop,\n                    locatedItemIndex: itemIndex,\n                    compareItemIndex: compareItemIndex,\n                    startIndex: startIndex,\n                    endIndex: endIndex,\n                    itemHeight: itemHeight,\n                    getItemKey: getItemKeyByIndex,\n                    itemElementHeights: refItemHeightMap.current,\n                });\n                var similarity = Math.abs(compareItemTop - compareItemRelativeTop);\n                if (similarity < bestSimilarity) {\n                    bestSimilarity = similarity;\n                    bestScrollTop = scrollTop;\n                    bestItemIndex = itemIndex;\n                    bestItemOffsetPtg = itemOffsetPtg;\n                    bestStartIndex = startIndex;\n                    bestEndIndex = endIndex;\n                    missSimilarity = 0;\n                }\n                else {\n                    missSimilarity += 1;\n                }\n            }\n            if (missSimilarity > 10) {\n                break;\n            }\n        }\n        if (bestScrollTop !== null) {\n            refLockScroll.current = true;\n            refList.current.scrollTop = bestScrollTop;\n            setState(__assign(__assign({}, state), { status: 'MEASURE_START', scrollTop: bestScrollTop, itemIndex: bestItemIndex, itemOffsetPtg: bestItemOffsetPtg, startIndex: bestStartIndex, endIndex: bestEndIndex }));\n        }\n        refRafId.current = raf(function () {\n            refLockScroll.current = false;\n        });\n    };\n    // Record the current element position when the real list is scrolled, and ensure that the position is correct after switching to the virtual list\n    var rawListScrollHandler = function (event) {\n        var _a = refList.current, rawScrollTop = _a.scrollTop, clientHeight = _a.clientHeight, scrollHeight = _a.scrollHeight;\n        var scrollTop = getValidScrollTop(rawScrollTop, scrollHeight - clientHeight);\n        var scrollPtg = getScrollPercentage({\n            scrollTop: scrollTop,\n            clientHeight: clientHeight,\n            scrollHeight: scrollHeight,\n        });\n        var _b = getLocationItem(scrollPtg, itemCount), index = _b.index, offsetPtg = _b.offsetPtg;\n        setState(__assign(__assign({}, state), { scrollTop: scrollTop, itemIndex: index, itemOffsetPtg: offsetPtg }));\n        event && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(event, { index: index }));\n    };\n    // Modify the state and recalculate the position in the next render\n    var virtualListScrollHandler = function (event, isInit) {\n        if (isInit === void 0) { isInit = false; }\n        // Do NOT use refList.current.scrollHeight\n        // We should use Filler's height as total scroll height\n        // Filler's translate style may make refList.current.scrollHeight larger than Filler's height\n        var scrollHeight = itemTotalHeight;\n        var _a = refList.current, rawScrollTop = _a.scrollTop, clientHeight = _a.clientHeight;\n        var scrollTop = getValidScrollTop(rawScrollTop, scrollHeight - clientHeight);\n        // Prevent jitter\n        if (!isInit && (scrollTop === state.scrollTop || refLockScroll.current)) {\n            return;\n        }\n        var scrollPtg = getScrollPercentage({\n            scrollTop: scrollTop,\n            clientHeight: clientHeight,\n            scrollHeight: scrollHeight,\n        });\n        var _b = getRangeIndex(scrollPtg, itemCount, itemCountVisible), itemIndex = _b.itemIndex, itemOffsetPtg = _b.itemOffsetPtg, startIndex = _b.startIndex, endIndex = _b.endIndex;\n        setState(__assign(__assign({}, state), { scrollTop: scrollTop, itemIndex: itemIndex, itemOffsetPtg: itemOffsetPtg, startIndex: startIndex, endIndex: endIndex, status: 'MEASURE_START' }));\n        event && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(event, { index: itemIndex }));\n    };\n    useEffect(function () {\n        return function () {\n            refRafId.current && caf(refRafId.current);\n        };\n    }, []);\n    // rerender when the number of visible elements changes\n    useEffect(function () {\n        if (refList.current) {\n            if (isFirstRender) {\n                refList.current.scrollTop = 0;\n            }\n            virtualListScrollHandler(null, true);\n        }\n    }, [itemCountVisible]);\n    // Handle additions and deletions of list items or switching the virtual state\n    useEffect(function () {\n        if (!refList.current)\n            return;\n        var changedItemIndex = null;\n        var switchTo = refIsVirtual.current !== isVirtual ? (isVirtual ? 'virtual' : 'raw') : '';\n        refIsVirtual.current = isVirtual;\n        if (viewportHeight && prevData.length !== data.length) {\n            var diff = findListDiffIndex(prevData, data, getItemKey);\n            changedItemIndex = diff ? diff.index : null;\n        }\n        // No need to correct the position when the number of elements in the real list changes\n        if (switchTo || (isVirtual && changedItemIndex)) {\n            var clientHeight = refList.current.clientHeight;\n            var locatedItemRelativeTop = getItemRelativeTop({\n                itemHeight: getCachedItemHeight(getItemKeyByIndex(state.itemIndex, prevData)),\n                itemOffsetPtg: state.itemOffsetPtg,\n                scrollPtg: getScrollPercentage({\n                    scrollTop: state.scrollTop,\n                    scrollHeight: prevData.length * itemHeight,\n                    clientHeight: clientHeight,\n                }),\n                clientHeight: clientHeight,\n            });\n            if (switchTo === 'raw') {\n                var rawTop = locatedItemRelativeTop;\n                for (var index = 0; index < state.itemIndex; index++) {\n                    rawTop -= getCachedItemHeight(getItemKeyByIndex(index));\n                }\n                refList.current.scrollTop = -rawTop;\n                refLockScroll.current = true;\n                refRafId.current = raf(function () {\n                    refLockScroll.current = false;\n                });\n            }\n            else {\n                internalScrollTo({\n                    itemIndex: state.itemIndex,\n                    relativeTop: locatedItemRelativeTop,\n                });\n            }\n        }\n    }, [data, isVirtual]);\n    useIsomorphicLayoutEffect(function () {\n        if (state.status === 'MEASURE_START' && refList.current) {\n            var _a = refList.current, scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n            var scrollPtg = getScrollPercentage({\n                scrollTop: scrollTop,\n                scrollHeight: scrollHeight,\n                clientHeight: clientHeight,\n            });\n            // Calculate the top value of the first rendering element\n            var startItemTop = getItemAbsoluteTop({\n                scrollPtg: scrollPtg,\n                clientHeight: clientHeight,\n                scrollTop: scrollTop - (scrollListPadding.top + scrollListPadding.bottom) * scrollPtg,\n                itemHeight: getCachedItemHeight(getItemKeyByIndex(state.itemIndex)),\n                itemOffsetPtg: state.itemOffsetPtg,\n            });\n            for (var index = state.itemIndex - 1; index >= state.startIndex; index--) {\n                startItemTop -= getCachedItemHeight(getItemKeyByIndex(index));\n            }\n            setState(__assign(__assign({}, state), { startItemTop: startItemTop, status: 'MEASURE_DONE' }));\n        }\n    }, [state]);\n    useImperativeHandle(ref, function () { return ({\n        dom: refList.current,\n        getRootDOMNode: function () { return refList.current; },\n        // Scroll to a certain height or an element\n        scrollTo: function (arg) {\n            refRafId.current && caf(refRafId.current);\n            refRafId.current = raf(function () {\n                var _a;\n                if (!refList.current)\n                    return;\n                if (typeof arg === 'number') {\n                    refList.current.scrollTop = arg;\n                    return;\n                }\n                var index = 'index' in arg\n                    ? arg.index\n                    : 'key' in arg\n                        ? data.findIndex(function (item, index) { return getItemKey(item, index) === arg.key; })\n                        : 0;\n                var item = data[index];\n                if (!item) {\n                    return;\n                }\n                var align = typeof arg === 'object' && ((_a = arg.options) === null || _a === void 0 ? void 0 : _a.block)\n                    ? arg.options.block\n                    : (scrollOptions === null || scrollOptions === void 0 ? void 0 : scrollOptions.block) || 'nearest';\n                var _b = refList.current, clientHeight = _b.clientHeight, scrollTop = _b.scrollTop;\n                if (isVirtual && !isStaticItemHeight) {\n                    if (align === 'nearest') {\n                        var itemIndex = state.itemIndex, itemOffsetPtg = state.itemOffsetPtg;\n                        if (Math.abs(itemIndex - index) < itemCountVisible) {\n                            var itemTop = getItemRelativeTop({\n                                itemHeight: getCachedItemHeight(getItemKeyByIndex(itemIndex)),\n                                itemOffsetPtg: itemOffsetPtg,\n                                clientHeight: clientHeight,\n                                scrollPtg: getScrollPercentage(refList.current),\n                            });\n                            if (index < itemIndex) {\n                                for (var i = index; i < itemIndex; i++) {\n                                    itemTop -= getCachedItemHeight(getItemKeyByIndex(i));\n                                }\n                            }\n                            else {\n                                for (var i = itemIndex; i < index; i++) {\n                                    itemTop += getCachedItemHeight(getItemKeyByIndex(i));\n                                }\n                            }\n                            // When the target element is within the field of view, exit directly\n                            if (itemTop < 0 || itemTop > clientHeight) {\n                                align = itemTop < 0 ? 'start' : 'end';\n                            }\n                            else {\n                                return;\n                            }\n                        }\n                        else {\n                            align = index < itemIndex ? 'start' : 'end';\n                        }\n                    }\n                    setState(__assign(__assign({}, state), { startIndex: Math.max(0, index - itemCountVisible), endIndex: Math.min(itemCount - 1, index + itemCountVisible) })).then(function () {\n                        var itemHeight = getCachedItemHeight(getItemKey(item, index));\n                        internalScrollTo({\n                            itemIndex: index,\n                            relativeTop: align === 'start'\n                                ? 0\n                                : (clientHeight - itemHeight) / (align === 'center' ? 2 : 1),\n                        });\n                    });\n                }\n                else {\n                    var indexItemHeight = getCachedItemHeight(getItemKeyByIndex(index));\n                    var itemTop = 0;\n                    for (var i = 0; i < index; i++) {\n                        itemTop += getCachedItemHeight(getItemKeyByIndex(i));\n                    }\n                    var itemBottom = itemTop + indexItemHeight;\n                    var itemMiddle = itemTop + indexItemHeight / 2;\n                    // If item is visible, skip scrolling\n                    if (itemMiddle > scrollTop && itemMiddle < clientHeight + scrollTop) {\n                        return;\n                    }\n                    if (align === 'nearest') {\n                        if (itemTop < scrollTop) {\n                            align = 'start';\n                        }\n                        else if (itemBottom > scrollTop + clientHeight) {\n                            align = 'end';\n                        }\n                    }\n                    var viewportHeight_1 = clientHeight - indexItemHeight;\n                    refList.current.scrollTop =\n                        itemTop - (align === 'start' ? 0 : viewportHeight_1 / (align === 'center' ? 2 : 1));\n                }\n            });\n        },\n    }); }, [data, itemHeight, state]);\n    var renderChildren = function (list, startIndex) {\n        return list.map(function (item, index) {\n            var originIndex = startIndex + index;\n            var node = renderChild(item, originIndex, {\n                style: {},\n                itemIndex: index,\n            });\n            var key = getItemKey(item, originIndex);\n            return React.cloneElement(node, {\n                key: key,\n                ref: function (ele) {\n                    var _a, _b;\n                    var heightMap = refItemHeightMap.current;\n                    // Minimize the measurement of element height as much as possible to avoid frequent triggering of browser reflow\n                    // Method getNodeHeight get the clientHeight from the DOM referred by React ref. If result is wrong, check the ref of this element\n                    if (ele &&\n                        state.status === 'MEASURE_START' &&\n                        (!isStaticItemHeight || heightMap[key] === undefined)) {\n                        if (isStaticItemHeight) {\n                            if (!heightMap[KEY_VIRTUAL_ITEM_HEIGHT]) {\n                                heightMap[KEY_VIRTUAL_ITEM_HEIGHT] = getNodeHeight(ele, true);\n                            }\n                            heightMap[key] = heightMap[KEY_VIRTUAL_ITEM_HEIGHT];\n                        }\n                        else {\n                            heightMap[key] = getNodeHeight(ele, true);\n                        }\n                    }\n                    if (isFunction((_a = node) === null || _a === void 0 ? void 0 : _a.ref)) {\n                        (_b = node) === null || _b === void 0 ? void 0 : _b.ref(ele);\n                    }\n                },\n            });\n        });\n    };\n    // Render the widest element to provide the maximum width of the container initially\n    var refLongestItemIndex = useRef(null);\n    // Don't add `renderChild` to the array dependency, it will change every time when rerender\n    useEffect(function () {\n        refLongestItemIndex.current = null;\n    }, [data]);\n    var renderLongestItem = function () {\n        if (measureLongestItem) {\n            var index = refLongestItemIndex.current === null\n                ? getLongestItemIndex(data)\n                : refLongestItemIndex.current;\n            var item = data[index];\n            refLongestItemIndex.current = index;\n            return item ? (React.createElement(\"div\", { style: { height: 1, overflow: 'hidden', opacity: 0 } }, renderChild(item, index, { style: {} }))) : null;\n        }\n        return null;\n    };\n    return (React.createElement(ResizeObserver, { onResize: function () {\n            if (refList.current && !isNumber(styleListMaxHeight)) {\n                var clientHeight = refList.current.clientHeight;\n                setStateHeight(clientHeight);\n            }\n        }, getTargetDOMNode: function () { return refList.current; } },\n        React.createElement(WrapperTagName, __assign({ ref: refList, style: __assign(__assign({ overflowY: 'auto', overflowAnchor: 'none' }, style), { maxHeight: styleListMaxHeight }), className: className, onScroll: isVirtual ? virtualListScrollHandler : rawListScrollHandler }, restProps), isVirtual ? (React.createElement(React.Fragment, null,\n            React.createElement(Filler, { height: itemTotalHeight, outerStyle: outerStyle, innerStyle: innerStyle, offset: state.status === 'MEASURE_DONE' ? state.startItemTop : 0 },\n                React.createElement(WrapperChildTagName, null, renderChildren(data.slice(state.startIndex, state.endIndex + 1), state.startIndex))),\n            renderLongestItem())) : needFiller ? (React.createElement(Filler, { height: viewportHeight, outerStyle: outerStyle, innerStyle: innerStyle },\n            React.createElement(WrapperChildTagName, null, renderChildren(data, 0)))) : (React.createElement(WrapperChildTagName, null, renderChildren(data, 0))))));\n});\nVirtualList.displayName = 'VirtualList';\nexport default VirtualList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}