{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nexport default function mergeProps(_componentProps, _defaultProps, _globalComponentConfig, propsNameList) {\n  var defaultProps = _defaultProps || {};\n  var globalComponentConfig = _globalComponentConfig || {};\n  var componentProps = _componentProps || {};\n  var propNameSet = propsNameList ? new Set(propsNameList) : new Set(Object.keys(componentProps).concat(Object.keys(defaultProps)).concat(Object.keys(globalComponentConfig)));\n  var props = {};\n  propNameSet.forEach(function (propName) {\n    if (componentProps[propName] !== undefined) {\n      props[propName] = componentProps[propName];\n    } else if (propName in globalComponentConfig) {\n      props[propName] = globalComponentConfig[propName];\n    } else if (propName in defaultProps) {\n      props[propName] = defaultProps[propName];\n    }\n  });\n  return props;\n}","map":{"version":3,"names":["mergeProps","_componentProps","_defaultProps","_globalComponentConfig","propsNameList","defaultProps","globalComponentConfig","componentProps","propNameSet","Set","Object","keys","concat","props","forEach","propName","undefined"],"sources":["D:/Nodejs/oj-frontend/node_modules/@arco-design/web-react/es/_util/mergeProps.js"],"sourcesContent":["export default function mergeProps(_componentProps, _defaultProps, _globalComponentConfig, propsNameList) {\n    var defaultProps = _defaultProps || {};\n    var globalComponentConfig = _globalComponentConfig || {};\n    var componentProps = _componentProps || {};\n    var propNameSet = propsNameList\n        ? new Set(propsNameList)\n        : new Set(Object.keys(componentProps)\n            .concat(Object.keys(defaultProps))\n            .concat(Object.keys(globalComponentConfig)));\n    var props = {};\n    propNameSet.forEach(function (propName) {\n        if (componentProps[propName] !== undefined) {\n            props[propName] = componentProps[propName];\n        }\n        else if (propName in globalComponentConfig) {\n            props[propName] = globalComponentConfig[propName];\n        }\n        else if (propName in defaultProps) {\n            props[propName] = defaultProps[propName];\n        }\n    });\n    return props;\n}\n"],"mappings":";;;;;;;;;AAAA,eAAe,SAASA,UAAUA,CAACC,eAAe,EAAEC,aAAa,EAAEC,sBAAsB,EAAEC,aAAa,EAAE;EACtG,IAAIC,YAAY,GAAGH,aAAa,IAAI,CAAC,CAAC;EACtC,IAAII,qBAAqB,GAAGH,sBAAsB,IAAI,CAAC,CAAC;EACxD,IAAII,cAAc,GAAGN,eAAe,IAAI,CAAC,CAAC;EAC1C,IAAIO,WAAW,GAAGJ,aAAa,GACzB,IAAIK,GAAG,CAACL,aAAa,CAAC,GACtB,IAAIK,GAAG,CAACC,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC,CAChCK,MAAM,CAACF,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAAC,CACjCO,MAAM,CAACF,MAAM,CAACC,IAAI,CAACL,qBAAqB,CAAC,CAAC,CAAC;EACpD,IAAIO,KAAK,GAAG,CAAC,CAAC;EACdL,WAAW,CAACM,OAAO,CAAC,UAAUC,QAAQ,EAAE;IACpC,IAAIR,cAAc,CAACQ,QAAQ,CAAC,KAAKC,SAAS,EAAE;MACxCH,KAAK,CAACE,QAAQ,CAAC,GAAGR,cAAc,CAACQ,QAAQ,CAAC;IAC9C,CAAC,MACI,IAAIA,QAAQ,IAAIT,qBAAqB,EAAE;MACxCO,KAAK,CAACE,QAAQ,CAAC,GAAGT,qBAAqB,CAACS,QAAQ,CAAC;IACrD,CAAC,MACI,IAAIA,QAAQ,IAAIV,YAAY,EAAE;MAC/BQ,KAAK,CAACE,QAAQ,CAAC,GAAGV,YAAY,CAACU,QAAQ,CAAC;IAC5C;EACJ,CAAC,CAAC;EACF,OAAOF,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}