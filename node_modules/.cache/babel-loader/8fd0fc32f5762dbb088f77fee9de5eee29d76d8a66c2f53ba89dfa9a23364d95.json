{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { isArray, isObject } from '../_util/is';\nexport var isAcceptFile = function (file, propsAccept) {\n  var accept = isObject(propsAccept) ? propsAccept === null || propsAccept === void 0 ? void 0 : propsAccept.type : propsAccept;\n  // 显示设置 strict=false，才是非严格模式，不走过滤逻辑\n  var strict = !(isObject(propsAccept) && propsAccept.strict === false);\n  if (strict && accept && file) {\n    var accepts = isArray(accept) ? accept : accept.split(',').map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x;\n    });\n    var fileExtension_1 = (file.name.indexOf('.') > -1 ? \".\" + file.name.split('.').pop() : '').toLowerCase();\n    return accepts.some(function (type) {\n      var typeText = type && type.toLowerCase();\n      var fileType = (file.type || '').toLowerCase();\n      var baseFileType = fileType.split('/')[0]; // audio/mpeg => audio;\n      // `${baseFileType}/${fileExtension}` === typeText\n      // filetype is audio/mpeg, but accept is audio/mp3, should return true\n      if (typeText === fileType || \"\" + baseFileType + fileExtension_1.replace('.', '/') === typeText) {\n        // 类似excel文件这种\n        // 比如application/vnd.ms-excel和application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n        // 本身就带有.字符的，不能走下面的.jpg等文件扩展名判断处理\n        // 所以优先对比input的accept类型和文件对象的type值\n        return true;\n      }\n      // */*,*  之类的所有类型\n      if (/^\\*(\\/\\*)?$/.test(typeText)) {\n        return true;\n      }\n      if (/\\/\\*/.test(typeText)) {\n        // image/* 这种通配的形式处理\n        return fileType.replace(/\\/.*$/, '') === typeText.replace(/\\/.*$/, '');\n      }\n      if (/\\..*/.test(typeText)) {\n        // .jpg 等后缀名\n        var suffixList = [typeText];\n        // accept=\".jpg\", jpeg后缀类型同样可以上传，反之亦然\n        if (typeText === '.jpg' || typeText === '.jpeg') {\n          suffixList = ['.jpg', '.jpeg'];\n        }\n        return suffixList.indexOf(fileExtension_1) > -1;\n      }\n      return false;\n    });\n  }\n  return !!file;\n};\nexport var getFiles = function (fileList, accept) {\n  if (!fileList) {\n    return;\n  }\n  var files = [].slice.call(fileList);\n  if (accept) {\n    files = files.filter(function (file) {\n      return isAcceptFile(file, accept);\n    });\n  }\n  return files;\n};\nexport var loopDirectory = function (items, accept, callback) {\n  var files = [];\n  var restFileCount = 0; // 剩余上传文件的数量\n  var onFinish = function () {\n    !restFileCount && callback(files);\n  };\n  var _loopDirectory = function (item) {\n    restFileCount += 1;\n    if (item === null || item === void 0 ? void 0 : item.isFile) {\n      item.file(function (file) {\n        restFileCount -= 1;\n        if (isAcceptFile(file, accept)) {\n          Object.defineProperty(file, 'webkitRelativePath', {\n            value: item.fullPath.replace(/^\\//, '')\n          });\n          files.push(file);\n        }\n        onFinish();\n      });\n      return;\n    }\n    if (item === null || item === void 0 ? void 0 : item.isDirectory) {\n      // item 是个文件夹\n      var reader_1 = item.createReader();\n      var flag_1 = false;\n      var readEntries_1 = function () {\n        reader_1.readEntries(function (entries) {\n          if (!flag_1) {\n            restFileCount -= 1;\n            flag_1 = true;\n          }\n          if (entries.length === 0) {\n            onFinish();\n          } else {\n            readEntries_1(); // the maximum files read using readEntries is 100\n            entries.forEach(_loopDirectory);\n          }\n        });\n      };\n      readEntries_1();\n      return;\n    }\n    restFileCount -= 1;\n    onFinish();\n  };\n  var list = [].slice.call(items);\n  list.forEach(function (item) {\n    if (item.webkitGetAsEntry) {\n      _loopDirectory(item.webkitGetAsEntry());\n    }\n  });\n};","map":{"version":3,"names":["isArray","isObject","isAcceptFile","file","propsAccept","accept","type","strict","accepts","split","map","x","trim","filter","fileExtension_1","name","indexOf","pop","toLowerCase","some","typeText","fileType","baseFileType","replace","test","suffixList","getFiles","fileList","files","slice","call","loopDirectory","items","callback","restFileCount","onFinish","_loopDirectory","item","isFile","Object","defineProperty","value","fullPath","push","isDirectory","reader_1","createReader","flag_1","readEntries_1","readEntries","entries","length","forEach","list","webkitGetAsEntry"],"sources":["D:/Nodejs/oj-frontend/node_modules/@arco-design/web-react/es/Upload/util.js"],"sourcesContent":["import { isArray, isObject } from '../_util/is';\nexport var isAcceptFile = function (file, propsAccept) {\n    var accept = isObject(propsAccept) ? propsAccept === null || propsAccept === void 0 ? void 0 : propsAccept.type : propsAccept;\n    // 显示设置 strict=false，才是非严格模式，不走过滤逻辑\n    var strict = !(isObject(propsAccept) && propsAccept.strict === false);\n    if (strict && accept && file) {\n        var accepts = isArray(accept)\n            ? accept\n            : accept\n                .split(',')\n                .map(function (x) { return x.trim(); })\n                .filter(function (x) { return x; });\n        var fileExtension_1 = (file.name.indexOf('.') > -1 ? \".\" + file.name.split('.').pop() : '').toLowerCase();\n        return accepts.some(function (type) {\n            var typeText = type && type.toLowerCase();\n            var fileType = (file.type || '').toLowerCase();\n            var baseFileType = fileType.split('/')[0]; // audio/mpeg => audio;\n            // `${baseFileType}/${fileExtension}` === typeText\n            // filetype is audio/mpeg, but accept is audio/mp3, should return true\n            if (typeText === fileType ||\n                \"\" + baseFileType + fileExtension_1.replace('.', '/') === typeText) {\n                // 类似excel文件这种\n                // 比如application/vnd.ms-excel和application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n                // 本身就带有.字符的，不能走下面的.jpg等文件扩展名判断处理\n                // 所以优先对比input的accept类型和文件对象的type值\n                return true;\n            }\n            // */*,*  之类的所有类型\n            if (/^\\*(\\/\\*)?$/.test(typeText)) {\n                return true;\n            }\n            if (/\\/\\*/.test(typeText)) {\n                // image/* 这种通配的形式处理\n                return fileType.replace(/\\/.*$/, '') === typeText.replace(/\\/.*$/, '');\n            }\n            if (/\\..*/.test(typeText)) {\n                // .jpg 等后缀名\n                var suffixList = [typeText];\n                // accept=\".jpg\", jpeg后缀类型同样可以上传，反之亦然\n                if (typeText === '.jpg' || typeText === '.jpeg') {\n                    suffixList = ['.jpg', '.jpeg'];\n                }\n                return suffixList.indexOf(fileExtension_1) > -1;\n            }\n            return false;\n        });\n    }\n    return !!file;\n};\nexport var getFiles = function (fileList, accept) {\n    if (!fileList) {\n        return;\n    }\n    var files = [].slice.call(fileList);\n    if (accept) {\n        files = files.filter(function (file) {\n            return isAcceptFile(file, accept);\n        });\n    }\n    return files;\n};\nexport var loopDirectory = function (items, accept, callback) {\n    var files = [];\n    var restFileCount = 0; // 剩余上传文件的数量\n    var onFinish = function () {\n        !restFileCount && callback(files);\n    };\n    var _loopDirectory = function (item) {\n        restFileCount += 1;\n        if (item === null || item === void 0 ? void 0 : item.isFile) {\n            item.file(function (file) {\n                restFileCount -= 1;\n                if (isAcceptFile(file, accept)) {\n                    Object.defineProperty(file, 'webkitRelativePath', {\n                        value: item.fullPath.replace(/^\\//, ''),\n                    });\n                    files.push(file);\n                }\n                onFinish();\n            });\n            return;\n        }\n        if (item === null || item === void 0 ? void 0 : item.isDirectory) {\n            // item 是个文件夹\n            var reader_1 = item.createReader();\n            var flag_1 = false;\n            var readEntries_1 = function () {\n                reader_1.readEntries(function (entries) {\n                    if (!flag_1) {\n                        restFileCount -= 1;\n                        flag_1 = true;\n                    }\n                    if (entries.length === 0) {\n                        onFinish();\n                    }\n                    else {\n                        readEntries_1(); // the maximum files read using readEntries is 100\n                        entries.forEach(_loopDirectory);\n                    }\n                });\n            };\n            readEntries_1();\n            return;\n        }\n        restFileCount -= 1;\n        onFinish();\n    };\n    var list = [].slice.call(items);\n    list.forEach(function (item) {\n        if (item.webkitGetAsEntry) {\n            _loopDirectory(item.webkitGetAsEntry());\n        }\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}